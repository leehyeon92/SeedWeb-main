{"version":3,"sources":["components/TextInput/IconTextInput.js","assets/icon/pencil.svg","screens/Renderer/Privacy.js","screens/Main/MainPresenter.js","screens/Main/MainContainer.js","screens/Main/index.js","screens/Mypage/MypagePresenter.js","screens/Mypage/MypageContainer.js","screens/Mypage/index.js","screens/GoogleMap/pin.png","screens/GoogleMap/GoogleMapPresenter.js","screens/GoogleMap/GoogleMapContainer.js","screens/GoogleMap/index.js","screens/Renderer/Menu.js","screens/Renderer/RendererPresenter.js","screens/Renderer/RendererContainer.js","screens/Renderer/index.js","App.js","index.js"],"names":["styled","div","input","img","IconTextInput","emails","SimpleDialog","props","name","onClose","selectedValue","open","React","useState","anchorEl","setAnchorEl","phandleClose","popen","Boolean","id","undefined","Dialog","DialogTitle","fontSize","textAlign","sx","pt","pb","width","Grid","container","direction","alignItems","justifyContent","Button","variant","onClick","event","currentTarget","disabled","user","user_NFT","marginTop","Popover","anchorOrigin","vertical","horizontal","Box","component","display","TextField","m","p","label","onChange","e","console","log","target","value","setNickName","List","ListItem","ListItemText","primary","primaryTypographyProps","fontWeight","mb","secondary","user_NFTNickName","secondaryTypographyProps","title","tokenId","tokenType","user_Active","user_Account","substr","Privacy","setOpen","setSelectedValue","IconButton","edge","color","Item","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","text","MainPresenter","loading","setLoading","loading_Test","setLoading_Test","marginBottom","AppBar","position","Toolbar","Typography","align","flexGrow","src","process","margin","item","boxShadow","ListItemAvatar","Avatar","bgcolor","deepOrange","height","marginLeft","active","disconnect","active_Test","connectWalletConnect","account","LoadingButton","walletSearch","disconnect_Test","connectWalletConnect_Test","account_Test","walletSearch_Test","api","findStr","arr","walletconnect","WalletConnectConnector","rpc","network","qrcode","pollingInterval","MainContainer","setUser","localStorage","removeItem","useWeb3React","activate","deactivate","navigate","useNavigate","setActive_Test","setAccount_Test","onChangeName","setName","alert","config","apiKey","Network","ETH_MAINNET","alchemy","Alchemy","getMyNFTs","result","pageKey","nft","getNftsForOwner","withMetadata","data","concat","ownedNfts","nftList","indexOf","push","prevState","user_NFTArray","setActive","setAccount","ex","MypagePresenter","i","size","onClickTitleButton","length","setItem","JSON","stringify","createTitleButton","MypageContainer","getItem","parse","firstShowRoom","names","containerStyle","curZoom","showRoomEndArr","showRoom","new_ShowRoom","_name","_position","_dateStart","_dateEnd","_imgWeightSize","room","dateStart","dateEnd","imgWeightSize","coming","currerent","end","none","lat","lng","pick","GoogleMapPresenter","isLoaded","useJsApiLoader","googleMapsApiKey","user_NFTComing","user_NFTNow","user_NFTEnd","user_ShowRoomEndArr","a","unshift","map","setMap","onLoad","useCallback","loadMap","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","onLoad2","marker","bhandleToggle","setTimeout","bhandleClose","zoom","setZoom","useEffect","MarkerClick","setCenter","NONE_Position","bopen","setbOpen","Backdrop","zIndex","drawer","CircularProgress","onZoomChanged","this","getZoom","mapContainerStyle","options","panControl","zoomControl","scaleControl","streetViewControl","mapTypeControl","overviewMapControl","rotateControl","disableDefaultUI","clickableIcons","center","optimized","MarkerImg","icon","url","anchor","Point","scaledSize","Size","style","borderRadius","mr","ml","ClickAwayListener","onClickAway","prev","paddingLeft","maxHeight","overflow","subheader","sectionId","memo","GoogleMapContainer","opa","Menu","anchorEl2","setAnchorEl2","ppanchorEl","ppsetAnchorEl","ppopen","ppid","Popper","placement","PaperProps","opacity","background","GoogleMap","DeleteScene","location","replace","curShowRoom","SimpleDialogDemo","propTypes","PropTypes","func","isRequired","bool","camera","scene","renderer","geometry","material","mesh","firstInit","params","innerWidth","innerHeight","RendererContainer","AddShowRoom","THREE","z","add","antialias","setSize","setAnimationLoop","animation","document","body","appendChild","domElement","link","manager","onStart","itemsLoaded","itemsTotal","onProgress","onError","GLTFLoader","load","glb","error","init","time","rotation","x","y","render","addEventListener","aspect","updateProjectionMatrix","createTheme","JE_Position","YO_Position","GA_Position","App","addEndArr","ThemeProvider","basename","path","element","Main","Mypage","Renderer","addComingArr","addNowArr","ReactDOM","getLibrary","provider","library","Web3Provider","getElementById"],"mappings":"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","file":"static/js/main.a3bd1928.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TextInputWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content : space-between;\n    flex: 1;\n    padding: 10px;\n    margin: 20px auto 0; \n    width: 200px;\n    border: 1px solid #999;\n    border-radius : 8px;\n`;\n\nconst Input = styled.input`\n    flex: 1;\n    border: 0;\n`;\n\nconst Icon = styled.img`\n    width: 20px;\n    height: 20px;\n`;\n\nfunction IconTextInput({ placeholder, icon, onChange }){\n    return (\n        <TextInputWrapper>\n            <Input placeholder={placeholder} onChange={onChange}/>\n            <Icon src={icon} alt=\"icon\"/>\n        </TextInputWrapper>\n    );\n}\n\nexport default IconTextInput;","export default __webpack_public_path__ + \"static/media/pencil.7ada824a.svg\";","\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { IconTextInput } from '../../components/TextInput';\r\nimport PencilIconSvg from '../../assets/icon/pencil.svg';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\r\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { green, pink, deepOrange } from '@mui/material/colors';\r\nimport { Button } from '@mui/material';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n//let nickName = \"none\"\r\nlet NFTInformation = \"none\"\r\n\r\nfunction SimpleDialog(props) {\r\n    const { onClose, selectedValue, open } = props;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n    \r\n    //\r\n    const phandleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const phandleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const popen = Boolean(anchorEl);\r\n    const id = popen ? 'simple-popover' : undefined;\r\n\r\n    let name;\r\n    \r\n    function inputName(e) {\r\n        console.log(e.target.value)\r\n        name = e.target.value;\r\n    }\r\n    function setName() {\r\n        console.log(name)\r\n        console.log(props)\r\n\r\n\r\n        props.setNickName(name)\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <Dialog onClose={handleClose} open={open} >\r\n            <DialogTitle fontSize={26}  textAlign='center' \r\n                sx={{ pt: '16px', pb: '40px' , width:'180px'}}>PRIVACY</DialogTitle>\r\n            <Grid container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <div>\r\n                    <Button variant=\"outlined\" aria-describedby={id} onClick={phandleClick}\r\n                    disabled = {!props.user.user_NFT}\r\n                        sx={{ pt: '6px', pb: '6px', marginTop:'-30px' }}>\r\n\r\n                        EDIT NAME\r\n                    </Button>\r\n                    <Popover\r\n                        id={id}\r\n                        open={popen}\r\n                        anchorEl={anchorEl}\r\n                        onClose={phandleClose}\r\n                        anchorOrigin={{\r\n                            vertical: 'center',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            component=\"form\"\r\n                            // sx={{\r\n                            //     '& > :not(style)': { m: 1, width: '25ch' },\r\n                            // }}\r\n                            // noValidate\r\n                            // autoComplete=\"off\"\r\n                            display=\"flex\"\r\n                        >\r\n                            <TextField sx={{ m: 1, p: 0 }}\r\n                                id=\"outlined-basic\" label=\"Input NFT Name\" variant=\"outlined\" onChange={inputName} />\r\n                            <Button variant=\"contained\"  onClick={() => { setName(); phandleClose(); }} sx={{ m: 1 }}>\r\n\r\n                                SET\r\n                            </Button>\r\n                        </Box>\r\n                    </Popover>\r\n\r\n                </div>\r\n            </Grid>\r\n            {/* \r\n            <Button variant=\"outlined\" textAlign=\"center\" sx={{ mt: '20px', ml: '20px',mr: '20px' ,pt: '6px',pb: '6px' }}>EDIT NAME</Button> */}\r\n\r\n            <List >\r\n\r\n\r\n\r\n                <ListItem >\r\n\r\n\r\n\r\n                </ListItem>\r\n\r\n                <ListItem sx={{ pt: '0px', pb: '0px' }}>\r\n\r\n                    <ListItemText primary=\"NFT-NAME\"\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFTNickName ? props.user.user_NFTNickName : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n\r\n                </ListItem>\r\n\r\n\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TITLE\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.title : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TOKEN-ID\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.tokenId : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TOKEN-TYPE\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.tokenType : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n\r\n\r\n                <ListItem>\r\n\r\n                    <ListItemText primary=\"ACCOUNT\"\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_Active ? props.user.user_Account.substr(0, 6) + \"...\" : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n        </Dialog>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nfunction Privacy(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n\r\n    function showPrivacy() {\r\n        console.log(props.account_Test);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                edge=\"end\"\r\n                color=\"inherit\" onClick={handleClickOpen}\r\n>\r\n                <AccountCircleIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <SimpleDialog {...props}\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Privacy;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\nimport IconButton from '@mui/material/IconButton';\nimport { deepOrange } from '@mui/material/colors';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\nimport Privacy from '../Renderer/Privacy';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nfunction MainPresenter(props) {\n\n    const [loading, setLoading] = React.useState();\n    const [loading_Test, setLoading_Test] = React.useState();\n    function Loading() {\n        setLoading(true);\n    }\n    function Loading_Test() {\n        setLoading_Test(true);\n    }\n\n    return (\n\n\n        <Box\n\n            sx={{\n                width: '100%',\n                marginBottom: '6%'\n\n            }}>\n            <Grid container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <AppBar position=\"static\"  >\n                    <Toolbar variant=\"dense\">\n\n                        <YardOutlinedIcon fontSize=\"large\" />\n                        <Typography variant=\"h6\" align='center' sx={{ flexGrow: 1 }} >\n                            WALLET CONNECT\n\n\n                        </Typography>\n                        {/* <IconButton\n\n                            edge=\"end\"\n                            color=\"inherit\"\n\n                        >\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </IconButton> */}\n                        <Privacy {...props}/>\n\n                    </Toolbar>\n                </AppBar>\n\n\n                <Grid marginTop={'3%'}>\n                    <img src={process.env.PUBLIC_URL + \"/img/wallet.png\"} width=\"300\" margin=\"30\" ></img>\n\n                </Grid>\n\n                <Grid item  width='70vw' marginTop={'3%'} marginBottom={'6%'} boxShadow={8}>\n\n                    <Item >\n                        <List>\n\n                            <ListItem >\n                                <ListItemAvatar  >\n                                    <Avatar sx={{ bgcolor: deepOrange[100], width: 48, height: 48 \n                                    ,marginLeft:'-12%'\n                                    }}>\n\n\n                                        {props.active ? <IconButton onClick={props.disconnect}><ToggleOnTwoToneIcon color=\"primary\" fontSize='large' /></IconButton> : <IconButton disabled={(props.active_Test)} onClick={props.connectWalletConnect}><ToggleOffTwoToneIcon color=\"error\" fontSize='large' /></IconButton>}\n\n                                    </Avatar>\n\n                                </ListItemAvatar >\n                                <ListItemText   primary=\"ACTIVE / ACCOUNT\" secondary=\n                                    {props.active ? \"Connect / \" + props.account.substr(0, 6) + \"...\" : \"Not Connect\"}\n                                />\n                            </ListItem>\n\n                            <Box\n                                display=\"grid\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                margin=\"4%\"\n                            >\n                                {/* <Button variant=\"contained\" \n                                disabled={!props.active}\n                                 onClick={() => { props.walletSearch(); Loading(); }} loading={loading}\n                                >WALLET SEARCH</Button> */}\n\n                                <LoadingButton variant=\"contained\" sx={{width:'50vw' ,height:'100%', fontSize:'18px'}}\n                                disabled={!props.active}\n                                onClick={() => { props.walletSearch(); Loading(); }} loading={loading}\n                                >WALLET SEARCH</LoadingButton>\n\n                            </Box>\n                        </List>\n                    </Item>\n                </Grid>\n                <Grid item  width='70vw'  boxShadow={8}>\n                    <Item >\n                        <List>\n                            <ListItem >\n                                <ListItemAvatar >\n                                    <Avatar sx={{ bgcolor: deepOrange[100], width: 48, height: 48\n                                                                        ,marginLeft:'-12%' }}>\n                                        {props.active_Test ? <IconButton onClick={props.disconnect_Test}><ToggleOnTwoToneIcon color=\"primary\" fontSize='large' /></IconButton> : <IconButton disabled={(props.active)} onClick={props.connectWalletConnect_Test}><ToggleOffTwoToneIcon color=\"error\" fontSize='large' /></IconButton>}\n                                    </Avatar>\n                                </ListItemAvatar >\n                                <ListItemText primary=\"TEST CONNECT\" secondary=\n                                    {props.active_Test ? \"Connect / \" + props.account_Test.substr(0, 6) + \"...\" : \"Not Connect\"}\n                                />\n                            </ListItem>\n                            <Box\n                                display=\"grid\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                margin=\"4%\"\n                            >\n                                <LoadingButton variant=\"contained\"   sx={{width:'50vw' ,height:'100%', fontSize:'18px'}}\n                                disabled={!props.active_Test}\n                                onClick={() => { props.walletSearch_Test(); Loading_Test(); }} loading={loading_Test}\n                                >WALLET SEARCH</LoadingButton>\n\n                            </Box>\n                        </List>\n                    </Item>\n                </Grid>\n            </Grid>\n        </Box >\n\n    );\n}\n\nexport default MainPresenter;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport MainPresenter from './MainPresenter';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { Alchemy, Network } from \"alchemy-sdk\";\nimport { useNavigate } from 'react-router-dom';\n\nlet api = \"0caFBF128JudQbQ1Km-zn82t_L7C1Qvw\"\nlet findStr = \"monday ape\"\nlet arr = []\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: {\n        1: \"https://mainnet.infura.io/v3/00ca1859789d4b40bce01f4104844224\",\n        56: \"https://bsc-dataseed.binance.org/\"\n    },\n    network: \"binance\",\n    qrcode: true,\n    pollingInterval: 12000\n});\n\nfunction MainContainer({ user, setUser }) {\n    localStorage.removeItem('item')\n\n\n    const {\n        active,\n        account,\n        activate,\n        deactivate\n    } = useWeb3React();\n\n    const navigate = useNavigate();\n\n    const [active_Test, setActive_Test] = useState();\n    const [account_Test, setAccount_Test] = useState();\n\n    const props = {\n        active,\n        account,\n        active_Test,\n        account_Test,\n        user,\n\n\n        onChangeName: (e) => {\n            console.log(e.target.value)\n            setName(e.target.value);\n        },\n        connectWalletConnect: async () => {\n            try {\n                await activate(walletconnect);\n            } catch (ex) {\n                console.log(ex);\n            }\n\n        },\n\n        walletSearch: async () => {\n            if (!active) {\n                alert(\"Not Connect\")\n                return;\n            }\n\n            const config = {\n                apiKey: api,\n                network: Network.ETH_MAINNET,\n            };\n\n            const alchemy = new Alchemy(config);\n\n            const getMyNFTs = async (result, pageKey) => {\n                result = result ?? []\n\n                const data = await alchemy.nft.getNftsForOwner(account, {\n                    pageKey,\n                    withMetadata: false\n                })\n                result = result.concat(data.ownedNfts)\n\n                let nftList = data[\"ownedNfts\"]\n\n                let i = 1\n\n                for (let nft of nftList) {\n                    i++;\n                    if (`${nft.title}`.indexOf(findStr) != -1) {\n                        arr.push(nft);\n                    }\n                }\n\n                if (data.pageKey) {\n                    result = await getMyNFTs(result, data.pageKey)\n                }\n\n                return result\n            }\n\n            arr = [];\n            await getMyNFTs()\n            setUser((prevState) => {\n                return {\n                    ...prevState,\n                    user_Active: active,\n                    user_Account: account,\n                    user_NFTArray: arr,\n                }\n            });\n\n            navigate(`/mypage`);\n        },\n\n        disconnect: async () => {\n            try {\n                deactivate();\n\n                setActive(false)\n                setAccount(null)\n                setUser((prevState) => {\n                    return {\n                        ...prevState,\n                        user_Active: null,\n                        user_Account: null,\n                        user_NFTArray: null,\n                    }\n                });\n            } catch (ex) {\n                console.log(ex);\n            }\n        },\n\n\n        connectWalletConnect_Test: async () => {\n            setActive_Test(true)\n            setAccount_Test(\"0xdE9B4206B1499e56E4417f8EdB7bE4586FeD30Ba\")\n            setUser((prevState) => {\n                return {\n                    ...prevState,\n                    user_Active: true,\n                    user_Account: \"0xdE9B4206B1499e56E4417f8EdB7bE4586FeD30Ba\",\n                }\n            });\n\n        },\n\n        walletSearch_Test: async () => {\n            if (!active_Test) {\n                alert(\"Not Connect\")\n                return;\n            }\n\n            const config = {\n                apiKey: api,\n                network: Network.ETH_MAINNET,\n            };\n\n            const alchemy = new Alchemy(config);\n\n            const getMyNFTs = async (result, pageKey) => {\n\n                result = result ?? []\n\n                const data = await alchemy.nft.getNftsForOwner(account_Test, {\n                    pageKey,\n                    withMetadata: false\n                })\n                result = result.concat(data.ownedNfts)\n\n                let nftList = data[\"ownedNfts\"]\n\n                let i = 1\n\n                for (let nft of nftList) {\n                    i++;\n                    if (`${nft.title}`.indexOf(findStr) != -1) {\n                        arr.push(nft);\n                    }\n                }\n\n                if (data.pageKey) {\n                    result = await getMyNFTs(result, data.pageKey)\n                }\n\n                return result\n            }\n\n            arr = [];\n            await getMyNFTs()\n            setUser((prevState) => {\n                return {\n                    ...prevState,\n                    user_Active: active_Test,\n                    user_Account: account_Test,\n                    user_NFTArray: arr,\n                }\n            });\n\n            navigate(`/mypage`);\n        },\n\n        disconnect_Test: async () => {\n            setActive_Test(false)\n            setAccount_Test(null)\n            setUser((prevState) => {\n                return {\n                    ...prevState,\n                    user_Active: null,\n                    user_Account: null,\n                    user_NFTArray: null,\n                }\n            });\n        },\n    }\n    return (\n        <>\n            <MainPresenter {...props} />\n        </>\n    );\n}\n\nexport default MainContainer;","import MainContainer from \"./MainContainer\";\n\nexport default MainContainer;","import React from 'react';\n\nimport { IconTextInput } from '../../components/TextInput';\nimport PencilIconSvg from '../../assets/icon/pencil.svg';\n\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\n\nimport IconButton from '@mui/material/IconButton';\n\nimport { green, pink, deepOrange } from '@mui/material/colors';\nimport { Button } from '@mui/material';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\nimport Privacy from '../Renderer/Privacy';\n// const Container = styled.div`\n//     padding: 20px 0;\n//     text-align:center;\n//     display: grid;\n// `;\n\n// const Title = styled.div`\n//     font-size: 20px;\n//     font-weight: 600;\n// `;\n\n// const NameTag = styled.span`\n//     display: inline-block;\n//     margin-top:20px;\n//     background-color: #ebebeb;\n// `;\n\n// const ListButton = styled.button`\n//     margin:3%;\n//     height: 60%;\n// `;\n\nfunction MypagePresenter(props) {\n\n\n\n    const createTitleButton = () => {\n\n        // const getitem = JSON.parse(localStorage.getItem('item'))\n\n        // props.setUser(getitem)\n\n        // console.log(getitem)\n        // console.log(props.user)\n\n        const result = [];\n\n        for (let i = 0; i < props.user.user_NFTArray.length; i++) {\n\n            result.push(\n      \n                <Button\n                    sx={{width:'240px', margin:'10px'}}\n                    variant=\"contained\" size='large'  onClick={() => \n                    props.onClickTitleButton(props.user.user_NFTArray[i])}\n                     key={i}>{props.user.user_NFTArray[i].title}\n\n                </Button>\n\n\n\n\n            );\n\n        }\n\n         const value = props.user;\n         localStorage.setItem('item', JSON.stringify({value}))\n\n        return result;\n    }\n\n\n\n    return (\n\n\n        <Box\n            sx={{\n                width: '100vw',\n                height: '100vh'\n            }}>\n            <Grid >\n\n                <AppBar position=\"static\"  >\n                    <Toolbar variant=\"dense\">\n\n                        <YardOutlinedIcon fontSize=\"large\" />\n                        <Typography variant=\"h6\" align='center' sx={{ flexGrow: 1 }} >\n                            NFT LIST\n\n\n                        </Typography>\n                        {/* <IconButton\n\n                            edge=\"end\"\n                            color=\"inherit\"\n\n                        >\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </IconButton> */}\n                    <Privacy {...props}/>\n\n\n                    </Toolbar>\n                </AppBar>\n\n                <Grid container\n                    direction=\"column\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                    marginTop=\"10px\"\n                >\n                    {createTitleButton()}\n                </Grid>\n            </Grid>\n        </Box>\n\n\n\n    );\n}\n\nexport default MypagePresenter;","import React, { useState } from 'react';\nimport MypagePresenter from './MypagePresenter';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * 마이페이지 데이터 처리, 기능 관련 코드 작성\n */\n\n\nfunction MypageContainer({ user, setUser}) {\n\n   // walletAddress = localStorage.getItem('L_address')\n   // NFTArray = JSON.parse(localStorage.getItem('L_arr'))\n\n   if(localStorage.getItem('item'))\n   {\n    let getitem = JSON.parse(localStorage.getItem('item'))\n    user = getitem.value\n   }\n\n                \n\n    const navigate = useNavigate();\n\n    const props = {\n        user,\n        setUser,\n        onClickTitleButton: (nft) => {\n            const newnft = nft\n\n          //  localStorage.setItem('L_nft', nft);\n\n\n\n            setUser((prevState) => {\n                return { ...prevState, user_NFT: nft}\n            });\n\n\n            navigate(`/renderer`);\n\n        },\n    }\n\n    return (\n        <>\n            <MypagePresenter {...props} />\n        </>\n    );\n}\n\nexport default MypageContainer;","import MypageContainer from \"./MypageContainer\";\n\nexport default MypageContainer;","export default __webpack_public_path__ + \"static/media/pin.09d8abec.png\";","import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport { Button } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport MarkerImg from './pin.png';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ArrowForwardOutlinedIcon from '@mui/icons-material/ArrowForwardOutlined';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\n\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport RemoveCircleTwoToneIcon from '@mui/icons-material/RemoveCircleTwoTone';\r\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { width } from '@mui/system';\r\n\r\n\r\n\r\nconst JE_Position = {\r\n  lat: 33.396514,\r\n  lng: 126.344930\r\n}\r\n\r\nconst YO_Position = {\r\n  lat: 34.750594,\r\n  lng: 127.745762\r\n}\r\n\r\nconst GA_Position = {\r\n  lat: 37.791855,\r\n  lng: 128.90720,\r\n}\r\n\r\nlet firstShowRoom = false;\r\nlet names = []\r\nlet a = 1;\r\nconst containerStyle = {\r\n\r\n  width: '100vw',\r\n  height: '100vh',\r\n};\r\n\r\n\r\nlet curZoom = 3;\r\nlet showRoomArr = [];\r\nlet showRoomEndArr = [];\r\n\r\nfunction showRoom() {\r\n  let name, position, dateStart, dateEnd, imgWeightSize;\r\n}\r\n//state 0=coming 1=now 2=end\r\nfunction new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\r\n\r\n  let room = new showRoom();\r\n  room.name = _name;\r\n  room.position = _position;\r\n  room.dateStart = _dateStart;\r\n  room.dateEnd = _dateEnd;\r\n  room.imgWeightSize = _imgWeightSize;\r\n  return room;\r\n\r\n}\r\n\r\nconst NONE_Position = {\r\n\r\n  lat: 36.594678,\r\n  lng: 127.985756\r\n\r\n}\r\n\r\n\r\nlet coming, currerent, end\r\n\r\nlet none = new_ShowRoom(\"NONE\", NONE_Position, \"NONE\", \"NONE\", \"200\");\r\n\r\n\r\nfunction addcomingArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\r\n  let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\r\n  coming = room;\r\n  firstShowRoom = true;\r\n}\r\nfunction addnowArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\r\n  let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\r\n  currerent = room;\r\n  firstShowRoom = true;\r\n}\r\nfunction addEndArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\r\n  let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\r\n  end = room;\r\n  showRoomEndArr.push(room)\r\n  firstShowRoom = true;\r\n}\r\nfunction removecomingArr() {\r\n  coming = null;\r\n}\r\nfunction removenowArr() {\r\n  currerent = null;\r\n}\r\n\r\nfunction removeEndArr() {\r\n  end = null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// addcomingArr('ARTE 1', JE_Position, \"2022.11.20\", \"2028.11.20\", 120);\r\n// addnowArr('ARTE 2', YO_Position, \"2022.11.21\", \"2122.11.20\", 140);\r\n// addEndArr('ARTE 3', GA_Position, \"2022.11.21\", \"2122.11.20\", 140);\r\n//removeEndArr();\r\n\r\n\r\n\r\n\r\n\r\nfunction pick() {\r\n\r\n\r\n  if (currerent) {\r\n    console.log(\"1\")\r\n    return currerent;\r\n  }\r\n  else if (end) {\r\n    console.log(\"2\")\r\n    return end;\r\n  }\r\n  else if (coming) {\r\n    console.log(\"3\")\r\n    return coming;\r\n  }\r\n  else { }\r\n  console.log(\"4\")\r\n  return none;\r\n}\r\n\r\n\r\nconsole.log(pick())\r\n\r\n// addShowRoomArr('JE')\r\n// addShowRoomArr('YO')\r\n\r\n// let room = new_ShowRoom(\"JEJU\", JE_Position);\r\n\r\n\r\n\r\n// console.log(room)\r\n\r\n\r\n// ArrShowRoom.unshift(showRoom = new new_ShowRoom('JE', JE_Position));\r\n// ArrShowRoom.unshift(showRoom = new new_ShowRoom('YO', YO_Position));\r\n\r\n//console.log(a)\r\n//JE     lat: 33.396514 lng: 126.344930\r\n//YO     lat: 34.750591 lng: 127.745761\r\n//GA     lat: 37.791870 lng: 128.907162\r\n\r\n\r\n// const position = {\r\n//   lat: 33.396514,\r\n//   lng: 126.344930\r\n// }\r\n\r\n\r\n\r\nfunction GoogleMapPresenter(props) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyDAR5IsWK28BMFmf7TBPcToCG7sQoO81aA\"\r\n  })\r\n\r\n\r\n\r\n\r\n  coming = props.user.user_NFTComing\r\n  currerent = props.user.user_NFTNow\r\n  end = props.user.user_NFTEnd\r\n\r\n\r\n  names = []\r\n  showRoomEndArr = []\r\n  showRoomEndArr = props.user.user_ShowRoomEndArr\r\n\r\n\r\n\r\n\r\n\r\n  // const getitem = JSON.parse(localStorage.getItem('item'))\r\n\r\n  // props.setUser(getitem)\r\n\r\n  // console.log(getitem)\r\n  // console.log(props.user)\r\n\r\n  for (let i = 0; i < showRoomEndArr.length; ++i) {\r\n    let a = showRoomEndArr[i].dateStart + \" ~ \" + showRoomEndArr[i].dateEnd + \" - \" + showRoomEndArr[i].name\r\n    names.unshift(a)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (!coming && !currerent && !end) {\r\n    firstShowRoom = false;\r\n  }\r\n  else {\r\n    firstShowRoom = true;\r\n  }\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n\r\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\r\n    loadMap();\r\n    const bounds = new window.google.maps.LatLngBounds(pick() ? pick().position : null);\r\n    map.fitBounds(bounds);\r\n\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(map)\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  const onLoad2 = marker => {\r\n    console.log('marker: ', marker)\r\n  }\r\n\r\n\r\n  async function loadMap() {\r\n    bhandleToggle()\r\n\r\n    setTimeout(() => {\r\n      bhandleClose()\r\n    }, 600);\r\n\r\n  }\r\n\r\n  const [zoom, setZoom] = useState()\r\n\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setZoom(3)\r\n    }, 800);\r\n  }, [])\r\n\r\n\r\n  const MarkerClick = (p) => {\r\n\r\n    loadMap()\r\n    map.setCenter(p);\r\n   // setZoom(3)\r\n   setZoom(curZoom)\r\n\r\n    setTimeout(() => {\r\n      setZoom(15)\r\n    }, 400);\r\n\r\n  }\r\n\r\n\r\n  var myOptions = {\r\n    panControl: false,\r\n    zoomControl: false,\r\n    scaleControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    overviewMapControl: false,\r\n    rotateControl: false,\r\n    disableDefaultUI: true,\r\n    clickableIcons: false,\r\n  }\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const styles = {\r\n    position: 'fixed',\r\n    top: '30vh',\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    border: '1px solid',\r\n    p: 2,\r\n    borderRadius: 2,\r\n    margin: 2,\r\n    bgcolor: 'background.paper',\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n\r\n  const NONE_Position = {\r\n\r\n    lat: 36.594678,\r\n    lng: 127.985756\r\n\r\n  }\r\n\r\n  const [bopen, setbOpen] = React.useState(false);\r\n  const bhandleClose = () => {\r\n    setbOpen(false);\r\n  };\r\n  const bhandleToggle = () => {\r\n    setbOpen(!open);\r\n  };\r\n\r\n\r\n  function PlusZoom() {\r\n\r\n    let a = curZoom + 1;\r\n    setZoom(a)\r\n  }\r\n  function SuntractZoom() {\r\n    let a = curZoom - 1;\r\n    setZoom(a)\r\n  }\r\n\r\n  function handleZoomChanged() {\r\n    console.log(this.getZoom())\r\n    curZoom = this.getZoom()\r\n  }\r\n\r\n\r\n\r\n  return isLoaded ? (\r\n\r\n\r\n    <>\r\n      <div>\r\n        <Backdrop\r\n          sx={{ color: '#fff', height: '100vh', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={bopen}\r\n        // onClick={bhandleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" >\r\n\r\n          </CircularProgress>\r\n        </Backdrop>\r\n      </div>\r\n\r\n\r\n      <Box\r\n      >\r\n        <Grid\r\n          sx={{ height: '6vh ' }}\r\n        >\r\n          <GoogleMap\r\n            onZoomChanged={handleZoomChanged}\r\n            mapContainerStyle={containerStyle}\r\n\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            zoom={zoom}\r\n            options={myOptions}\r\n            center={pick().position}\r\n\r\n          >\r\n            {\r\n              !firstShowRoom ?\r\n\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{ src: { MarkerImg }, text: \"have no plans\", color: '#000', fontSize: \"20px\", fontWeight: \"500\" }}\r\n                  onLoad={onLoad2}\r\n\r\n                  position={currerent ? currerent.position : NONE_Position}\r\n\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(90, 60),\r\n                    scaledSize: new google.maps.Size(180, 180)\r\n                  }}\r\n                />\r\n\r\n\r\n                : null\r\n            }\r\n            {\r\n              currerent ?\r\n                <Marker\r\n\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{ src: { MarkerImg }, text: currerent ? \"NOW\" : \"cNONE\",\r\n                   color: '#000', fontSize: \"12px\", fontWeight: \"600\" }}\r\n                  onLoad={onLoad2}\r\n\r\n                  position={currerent ? currerent.position : NONE_Position}\r\n                  onClick={() => MarkerClick(currerent.position)}\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(30, 40),\r\n                    scaledSize: new google.maps.Size(60, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n\r\n            {\r\n              coming ?\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={4}\r\n                  label={{ src: { MarkerImg }, text: coming ? \"COMING\" : \"cNONE\", color: '#000', \r\n                  fontSize: \"12px\", fontWeight: \"600\" }}\r\n                  onLoad={onLoad2}\r\n                  position={coming ? coming.position : NONE_Position}\r\n\r\n                  onClick={() => MarkerClick(coming.position)}\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(40, 40),\r\n                    scaledSize: new google.maps.Size(80, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n\r\n            {\r\n              end ?\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{ src: { MarkerImg }, text: end ? \"ENDED\" : \"eNONE\", color: '#000', fontSize: \"12px\", fontWeight: \"600\" }}\r\n                  onLoad={onLoad2}\r\n                  position={end ? end.position : NONE_Position}\r\n                  onClick={() => MarkerClick(end.position)}\r\n\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n\r\n                    anchor: new google.maps.Point(30, 38),\r\n                    scaledSize: new google.maps.Size(60, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n          </GoogleMap>\r\n\r\n        </Grid>\r\n        <>\r\n          <Grid container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n\r\n\r\n            <Grid >\r\n              <Button variant=\"contained\"\r\n                sx={{padding:'4%'}}\r\n                style={{ marginTop: \"40%\", width: \"90px\", \r\n                display: \"grid\", borderRadius: 8, }}\r\n                onClick={() => coming ? MarkerClick(coming.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  COMING\r\n                </Typography>\r\n                <Typography\r\n                                sx={{marginTop:'-10%'}}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {coming ? coming.name : \"NONE\"}\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item mr={'2vw'} ml={'2vw'} >\r\n\r\n            </Grid>\r\n            \r\n            <Grid item >\r\n              <Button variant=\"contained\"\r\n                              sx={{padding:'4%'}}\r\n                style={{ marginTop: \"40%\", width: \"90px\", \r\n                display: \"grid\", borderRadius: 8, }}\r\n                onClick={() => currerent ? MarkerClick(currerent.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  NOW\r\n                </Typography>\r\n                <Typography\r\n                sx={{marginTop:'-10%'}}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {currerent ? currerent.name : \"NONE\"}\r\n                </Typography>\r\n              </Button>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid item mr={'2vw'} ml={'2vw'} >\r\n             \r\n\r\n            </Grid>\r\n\r\n            <Grid item >\r\n              <Button variant=\"contained\" color=\"primary\"\r\n                              sx={{padding:'4%'}}\r\n                style={{ marginTop: \"40%\", width: \"90px\", \r\n                display: \"grid\", borderRadius: 8, }}\r\n                onClick={() => end ? MarkerClick(end.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  ENDED\r\n                </Typography>\r\n                <Typography\r\n                                sx={{marginTop:'-10%'}}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {end ? end.name : \"NONE\"}\r\n                </Typography>\r\n                \r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n\r\n          >\r\n\r\n            <ClickAwayListener onClickAway={handleClickAway} >\r\n              <Box marginTop='1vmin'>\r\n                <Button onClick={handleClick} variant=\"contained\" color=\"primary\"\r\n                  style={{\r\n                    width: \"140px\",\r\n      \r\n\r\n\r\n                    borderRadius: 10,\r\n\r\n                    fontSize: \"10px\",\r\n\r\n                  }}\r\n\r\n                >\r\n                  <Typography\r\n                    fontSize=\"12px\">\r\n                    PAST SHOW LIST\r\n                  </Typography>\r\n\r\n                </Button>\r\n\r\n\r\n                  <IconButton\r\n                color=\"primary\" onClick={PlusZoom}        \r\n                sx={{paddingLeft:'40px' }}>\r\n                <AddCircleTwoToneIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n           <IconButton\r\n                color=\"primary\" onClick={SuntractZoom} \r\n                                  sx={{ }}>\r\n                <RemoveCircleTwoToneIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {open ? (\r\n\r\n\r\n\r\n                  <Grid item\r\n\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n\r\n\r\n                  >\r\n\r\n\r\n배포법r\r\n\r\n                    <List\r\n                      sx={{\r\n                        width: 'center',\r\n                        height: 'center',\r\n                        position: 'fixed',\r\n                        maxHeight: '30%',\r\n                        bgcolor: 'background.paper',\r\n\r\n                        overflow: 'auto',\r\n                        marginTop: '4%',\r\n                        borderRadius: 2,\r\n                        '& ul': { padding: 0 },\r\n                      }}\r\n                      subheader={<li />}\r\n                    >\r\n                      {[0].map((sectionId) => (\r\n                        <li key={`section-${sectionId}`}>\r\n                          <ul>\r\n                            {/* <ListSubheader\r\nsx={{textAlign:'center', fontSize:'20px', fontWeight: '600' ,marginTop: '4%'}}\r\n            >{`ENDED`}</ListSubheader> */}\r\n                            {names.map((item) => (\r\n                              <ListItem key={`${sectionId}-${item}`}\r\n                              >\r\n                                <ListItemText primary={` ${item}`}\r\n                                  primaryTypographyProps={{\r\n                                    fontSize: 11,\r\n                                    fontWeight: '400',\r\n                                    textAlign: 'center',\r\n                                    marginBottom: '-7px'\r\n                                  }}\r\n\r\n                                />\r\n                              </ListItem>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n                      ))}\r\n                    </List>\r\n\r\n\r\n                    {/* <ListItemText primary=\"ACCOUNT\"\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_Active ? props.user.user_Account.substr(0, 6) + \"...\" : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    /> */}\r\n\r\n\r\n\r\n                  </Grid>\r\n\r\n\r\n                ) : null}\r\n\r\n              </Box>\r\n\r\n            </ClickAwayListener>\r\n\r\n          </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n      </Box>\r\n    </>\r\n\r\n  ) : <></>\r\n}\r\n\r\nexport default React.memo(GoogleMapPresenter)","import React from 'react'\r\nimport GoogleMapPresenter from './GoogleMapPresenter'\r\n\r\nfunction GoogleMapContainer (props) {\r\n\r\n  return (\r\n    <>\r\n                <GoogleMapPresenter {...props} />\r\n    </>\r\n  )\r\n}\r\nexport default GoogleMapContainer;\r\n","import GoogleMapContainer from \"./GoogleMapContainer\";\r\n\r\nexport default GoogleMapContainer;","\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { IconTextInput } from '../../components/TextInput';\r\nimport PencilIconSvg from '../../assets/icon/pencil.svg';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\r\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { green, pink, deepOrange } from '@mui/material/colors';\r\nimport { Button } from '@mui/material';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport GoogleMapScreen from \"../GoogleMap/\";\r\nimport { width } from '@mui/system';\r\nimport Popper from '@mui/material/Popper';\r\n\r\nlet opa = 0;\r\n\r\nfunction Menu(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n    const [ppanchorEl, ppsetAnchorEl] = React.useState(null);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        opa = 0;\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setAnchorEl2(null);\r\n        ppsetAnchorEl(null);\r\n        opa = 0;\r\n    };\r\n\r\n    const exit = () => {\r\n        setAnchorEl(null);\r\n\r\n        setTimeout(() => {\r\n            setAnchorEl2(null);\r\n            ppsetAnchorEl(null);\r\n            opa = 0;\r\n          }, 500);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n    //\r\n    const phandleClick = (event) => {\r\n        setAnchorEl2(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const phandleClose = () => {\r\n        setAnchorEl2(null);\r\n        setAnchorEl(null);\r\n        ppsetAnchorEl(null);\r\n    };\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    function returnNFTList() {\r\n        props.DeleteScene();\r\n        localStorage.removeItem('item2')\r\n\r\n        window.location.replace(\"/mypage\")\r\n        // setTimeout(() => {\r\n        //     navigate(`/mypage`);\r\n        //   }, 1500);\r\n\r\n    }\r\n\r\n\r\n    const pphandleClick = (event) => {\r\n\r\n\r\n        setAnchorEl(null);\r\n        setAnchorEl2(null);\r\n        ppsetAnchorEl(null);\r\n\r\n        ppsetAnchorEl(event);\r\n\r\n\r\n        setTimeout(() => {\r\n            opa = 1;\r\n          }, 50);\r\n\r\n\r\n        setTimeout(() => {\r\n            setAnchorEl(event);\r\n          }, 100);\r\n\r\n\r\n\r\n        console.log(\"3333333\")\r\n        console.log(\"333333333\")\r\n    };3\r\n\r\n    const ppopen = Boolean(ppanchorEl);\r\n    const ppid = ppopen ? 'simple-popper' : undefined;\r\n\r\n\r\n    const popen = Boolean(anchorEl2);\r\n    const pid = popen ? 'simple-popover' : undefined;\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <div >\r\n            <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\" onClick={handleClick}\r\n\r\n\r\n                >\r\n\r\n\r\n                <MenuIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <Dialog onClose={handleClose} open={open} >\r\n                <DialogTitle fontSize={26} textAlign='center'\r\n\r\n                    sx={{ pt: '20px', marginBottom: '-50px' }}>MENU\r\n                            \r\n                    </DialogTitle>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n\r\n                    <Button variant=\"contained\" aria-describedby={id} onClick={pphandleClick}\r\n                        sx={{ \r\n                            pt: '10px', pb: '10px', width: '60%',\r\n                             marginTop: '50px', marginBottom: '30px' }}>\r\n\r\n                        OPEN EXHIBITION MAP\r\n                    </Button>\r\n\r\n\r\n                    <Popper\r\n                        id={ppid} open={ppopen} anchorEl={ppanchorEl}\r\n                        placement='bottom'\r\n\r\n                        PaperProps={{\r\n                            style: { width: '100%', height: '100%',    zIndex: 1000000 },\r\n                        }}\r\n\r\n                        style={{zIndex: 10000,\r\n                            opacity: opa\r\n                        }} \r\n                    >\r\n\r\n                      <AppBar position=\"fixed\"\r\n                                style={{ background: '\t#483D8B'}}\r\n\r\n                            >\r\n                                <Toolbar variant=\"dense\">\r\n                                    <YardOutlinedIcon\r\n                                     fontSize=\"large\" edge=\"start\" \r\n  \r\n                                     />\r\n                                    <Typography variant=\"h6\" align='center' \r\n                                    sx={{ flexGrow: 1 }} >\r\n                                        SEED EXHIBITION\r\n                                    </Typography>\r\n\r\n                                    <IconButton\r\n\r\n                                        edge=\"end\"\r\n                                        color=\"inherit\" onClick={exit}\r\n\r\n                                        >        \r\n                                        <CloseIcon fontSize=\"large\" \r\n                                        />\r\n                                    </IconButton>\r\n                                </Toolbar>\r\n                            </AppBar>      \r\n                        <GoogleMapScreen  {...props} />\r\n                    </Popper >\r\n                    <Button variant=\"contained\" onClick={returnNFTList}\r\n                        sx={{\r\n                            pt: '10px', pb: '10px', width: '60%', marginBottom: '50px'\r\n                            }}>\r\n\r\n                        RETURN NFT LIST\r\n                    </Button>\r\n                </Grid>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\n\nimport IconButton from '@mui/material/IconButton';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { green, pink, deepOrange } from '@mui/material/colors';\nimport { Button } from '@mui/material';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\n\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport { blue } from '@mui/material/colors';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useNavigate } from 'react-router-dom';\nimport MapIcon from '@mui/icons-material/Map';\nimport Popover from '@mui/material/Popover';\n\nimport Privacy from './Privacy';\nimport Menu from './Menu';\n\nimport BasicPopover from './BasicPopover'\n\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nimport RoomIcon from '@mui/icons-material/Room';\nimport { Height } from '@material-ui/icons';\n\n\nconst showRoom = {\n    UNDECIDED: \"UNDECIDED\",\n    JEJU: \"JEJU\",\n    YEOSU: \"YEOSU\",\n    GANGNEUNG: \"GANGNEUNG\",\n};\n\nlet curShowRoom = showRoom.GANGNEUNG;\n\nconsole.log(curShowRoom)\n\nfunction SimpleDialog(props) {\n    //\n\n    //\n    const { onClose, open } = props;\n\n    const navigate = useNavigate();\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const back = () => {\n        navigate(`/mypage`);\n    };\n\n    const showRoom = () => {\n        switch (curShowRoom) {\n            case \"UNDECIDED\":\n                alert(\"미정\")\n                break;\n            case \"JEJU\":\n\n                window.open('https://www.google.com/maps/place/%EC%95%84%EB%A5%B4%EB%96%BC%EB%AE%A4%EC%A7%80%EC%97%84+%EC%A0%9C%EC%A3%BC/data=!3m1!4b1!4m5!3m4!1s0x350c5f6816650b53:0xa96f526f32c1bd52!8m2!3d33.3965031!4d126.3449296', '_blank')\n                break;\n            case \"YEOSU\":\n                window.open('https://www.google.com/maps/place/%EC%95%84%EB%A5%B4%EB%96%BC%EB%AE%A4%EC%A7%80%EC%97%84+%EC%97%AC%EC%88%98/data=!3m1!4b1!4m5!3m4!1s0x356dd92ba33eb947:0xbf08f632e89f697a!8m2!3d34.7505794!4d127.7457573', '_blank')\n                break;\n            case \"GANGNEUNG\":\n                window.open('https://www.google.com/maps/place/%EC%95%84%EB%A5%B4%EB%96%BC%EB%AE%A4%EC%A7%80%EC%97%84+%EA%B0%95%EB%A6%89/data=!3m1!4b1!4m5!3m4!1s0x3561e7629fb74ba1:0xa8da84e4bbc18963!8m2!3d37.7917805!4d128.90719', '_blank')\n                break;\n            default:\n                break;\n        }\n    };\n\n\n    return (\n<>\n</>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\n\nfunction openMap() {\n\n}\n\nexport default function SimpleDialogDemo(props) {\n    const [open, setOpen] = React.useState(false);\n\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n    return (\n\n        \n        <Box >\n            <Grid   >\n                <AppBar position=\"fixed\"\n\n                sx={{\n\n            }}\n                >\n                    <Toolbar variant=\"dense\" >\n                        <>\n                            <Menu {...props} />\n                        </>\n                        <Typography variant=\"h6\" align='center' \n                        sx={{ flexGrow: 1 }} >\n\n                            {props.user.user_NFTNickName}\n                        </Typography >\n                        <Privacy {...props} />\n                    </Toolbar>\n                </AppBar>\n            </Grid>\n            <Grid position={'fixed'}>\n                <SimpleDialog {...props}\n                    open={open}\n                    onClose={handleClose} />\n            </Grid>\n        </Box>\n\n    );\n}\n","import React, { useState } from 'react';\nimport RendererPresenter from '../Renderer/RendererPresenter';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nlet camera, scene, renderer;\nlet geometry, material, mesh;\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\n\nimport IconButton from '@mui/material/IconButton';\n\nimport { green, pink, deepOrange } from '@mui/material/colors';\nimport { Button } from '@mui/material';\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\n\nimport { Scene } from 'three';\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nlet con = false;\nlet firstInit = false;\nlet NFTc;\nlet userc;\nconst params = {\n    color: '#FFA07A'\n};\n\nconst sceneX = window.innerWidth;\nconst sceneY = window.innerHeight\nlet bb = true;\n\n\nfunction RendererContainer({ user, setUser, AddShowRoom }) {\n\n\n    if( !user.user_NFTNickName)\n    {\n        user.user_NFTNickName =\"Default Name\"\n    }\n\n\n\n\n    if (!firstInit) {\n        init();\n        firstInit = true;\n    }\n\n\n    if (!user.user_NFT) {\n        let getitem = JSON.parse(localStorage.getItem('item2'))\n        user = getitem.value\n    }\n\n    const value = user;\n    localStorage.setItem('item2', JSON.stringify({ value }))\n\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n      setOpen(false);\n    };\n    const handleToggle = () => {\n      setOpen(true);\n    };\n\n    function init() {\n\n        AddShowRoom();\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10);\n        camera.position.z = 10;\n\n        scene = new THREE.Scene();\n\n        scene.background = new THREE.Color(params.color);\n        geometry = new THREE.BoxGeometry(1, 1, 1);\n        material = new THREE.MeshNormalMaterial();\n\n        mesh = new THREE.Mesh(geometry, material);\n\n\n        scene.add(mesh);\n\n        renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        renderer.setAnimationLoop(animation);\n        document.body.appendChild(renderer.domElement);\n\n\n       // let link = \"https://vast-wildwood-40697.herokuapp.com/https://dstrict.s3.ap-northeast-2.amazonaws.com/seed/TREX.glb\"\n        let link = process.env.PUBLIC_URL + \"/model/T-Rex.glb\"\n        const manager = new THREE.LoadingManager();\n        manager.onStart = function (url, itemsLoaded, itemsTotal) {\n\n            console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n\n        };\n\n        manager.onLoad = function () {\n\n            console.log('Loading complete!');\n           // handleClose();\n        };\n\n\n        manager.onProgress = function (url, itemsLoaded, itemsTotal) {\n\n            console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n\n        };\n\n        manager.onError = function (url) {\n\n            console.log('There was an error loading ' + url);\n\n        };\n\n\n        //\n\n\n        const loader = new GLTFLoader(manager);\n\n\n\n        loader.load(link, function (glb) {\n\n            scene.add(glb.scene);\n\n        }, undefined, function (error) {\n\n            console.error(error);\n\n        });\n\n\n\n\n\n\n    }\n\n\n\n    //const sceneX = window.innerWidth;\n   // const sceneY = window.innerHeight\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n        setTimeout(() => {\n        camera.aspect = window.innerWidth /window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth , window.innerHeight);\n    }, 100);\n    //     if(!con)\n    //     {\n\n    //         if(bb)\n    //         {\n\n    //         //    camera.aspect = window.innerWidth /window.innerHeight;\n    //         //    camera.updateProjectionMatrix();\n    //          //   renderer.setSize(window.innerWidth , window.innerHeight);\n\n    //             setTimeout(() => {\n    //                 camera.aspect = window.innerWidth /window.innerHeight;\n    //                 camera.updateProjectionMatrix();\n    //                 renderer.setSize(window.innerWidth , window.innerHeight);\n    //                 con = true\n\n    //                 console.log(\"zzzzzzzzzzzzzzz\")\n    //                 console.log(\"zzzzzzzzzzzzzzz\")\n    //               }, 100);\n    //        }\n    //        bb = false\n\n\n    //    }\n    //     else if (con) {\n\n    //         if(!bb)\n    //         {\n\n    //       //      camera.aspect = window.innerWidth /window.innerHeight;\n    //        //     camera.updateProjectionMatrix();\n    //       //     renderer.setSize(window.innerWidth , window.innerHeight);\n\n    //         setTimeout(() => {\n    //             camera.aspect = window.innerWidth /window.innerHeight;\n    //             camera.updateProjectionMatrix();\n    //             renderer.setSize(window.innerWidth , window.innerHeight);\n    //             con = false\n\n    //             console.log(\"xxxxxxxxxxx\")\n    //             console.log(\"xxxxxxxxxxxx\")\n    //           }, 100);\n    //         }\n    //         bb = true\n    //     }\n\n\n        \n    }\n\n    function animation(time) {\n\n\n\n        mesh.rotation.x = time / 2000;\n        mesh.rotation.y = time / 1000;\n\n        renderer.render(scene, camera);\n\n\n    }\n\n    const props = {\n\n        user,\n        setUser,\n        setNickName: (name) => {\n            setUser((prevState) => {\n                return { ...prevState, user_NFTNickName: name }\n            });\n        },\n        DeleteScene: () => {\n\n\n\n            camera = null\n            scene.background = null\n            scene = null\n            geometry = null\n            material = null\n            mesh = null\n            renderer.setAnimationLoop(null);\n            renderer = null\n\n\n        },\n\n\n    }\n\n\n    return (\n        <>\n\n\n\n            <RendererPresenter {...props} />\n\n        </>\n    );\n}\n\nexport default RendererContainer;","import RendererContainer from \"./RendererContainer\";\n\nexport default RendererContainer;","import React, { useState } from \"react\";\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport MainScreen from './screens/Main';\nimport MypageScreen from './screens/Mypage';\nimport RendererScreen from './screens/Renderer'\nimport './App.css'\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography'\n\nconst theme = createTheme({\n  typography: {\n    \"fontFamily\": `\"Raleway\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  },\n});\n\nconst JE_Position = {\n  lat: 33.396514,\n  lng: 126.344930\n}\n\nconst YO_Position = {\n  lat: 34.750594,\n  lng: 127.745762\n}\n\nconst GA_Position = {\n  lat: 37.791855,\n  lng: 128.90720,\n}\n\nfunction App() {\n  let [user, setUser] = useState({\n    user_Active: null,\n    user_Account: null,\n    user_NFT: null,\n    user_NFTArray: null,\n    user_NFTNickName: null,\n    user_NFTComing: null,\n    user_NFTNow: null,\n    user_NFTEnd: null,\n    user_ShowRoomEndArr: [],\n  });\n\n  function showRoom() {\n    let name, position, dateStart, dateEnd, imgWeightSize;\n  }\n\n  function new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\n    let room = new showRoom();\n    room.name = _name;\n    room.position = _position;\n    room.dateStart = _dateStart;\n    room.dateEnd = _dateEnd;\n    room.imgWeightSize = _imgWeightSize;\n    return room;\n  }\n\n  function addComingArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\n    user.user_NFTComing = room;\n  }\n\n  function addNowArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\n    user.user_NFTNow = room;\n  }\n\n  function addEndArr(_name, _position, _dateStart, _dateEnd, _imgWeightSize) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd, _imgWeightSize);\n    user.user_NFTEnd = room;\n    user.user_ShowRoomEndArr.push(room)\n  }\n\n  function removeComing() {\n    user.user_NFTComing = null;\n  }\n\n  function removeNow() {\n    user.user_NFTNow = null;\n  }\n\n  function removeEnd() {\n    user.user_NFTEnd = null;\n  }\n\n  function removeEndArr() {\n    user.user_ShowRoomEndArr = null;\n  }\n\n  function removeAll() {\n    user.user_NFTComing = null;\n    user.user_NFTNow = null;\n    user.user_NFTEnd = null;\n    user.user_ShowRoomEndArr = null;\n  }\n\n  function AddShowRoom() {\n  //\n  addComingArr('제주', JE_Position, \"2022.11.20\", \"2030.05.20\", 120);\n  addNowArr('여수', YO_Position, \"2023.11.21\", \"2031.11.20\", 140);\n  addEndArr('강릉1', GA_Position, \"2021.11.22\", \"2031.11.20\", 140);\n  addEndArr('강릉2', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉13', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉112', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉23', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉24', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉25', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n  addEndArr('강릉26', GA_Position, \"2022.11.22\", \"2032.11.20\", 140);\n\n\n  //\n  }\n\n\n//https://leehyeon92.github.io/SeedWeb-main/main\n  return (\n    <>\n\n\n    <ThemeProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route path=\"/main\" element={<MainScreen user={user} setUser={setUser} />} />\n\n          <Route path=\"/mypage\" element={<MypageScreen user={user} setUser={setUser} />} />\n          <Route path=\"/renderer\" element={<RendererScreen user={user} setUser={setUser} AddShowRoom={AddShowRoom} />} />\n        </Routes>\n      </BrowserRouter>\n    </ThemeProvider>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}