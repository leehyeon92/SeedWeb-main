{"version":3,"sources":["screens/Renderer/Privacy.js","screens/Main/MainPresenter.js","screens/Main/MainContainer.js","screens/Mypage/MypagePresenter.js","screens/Main/index.js","screens/Mypage/MypageContainer.js","screens/GoogleMap/GoogleMapPresenter.js","screens/Mypage/index.js","assets/icon/pencil.svg","screens/GoogleMap/pin.png","screens/GoogleMap/GoogleMapContainer.js","screens/GoogleMap/index.js","screens/Renderer/Menu.js","screens/Renderer/RendererPresenter.js","screens/Renderer/RendererContainer.js","screens/Renderer/index.js","App.js","index.js"],"names":["name","regex","emails","SimpleDialog","props","onClose","selectedValue","open","React","useState","anchorEl","setAnchorEl","createName","setCreateName","phandleClose","popen","Boolean","id","undefined","inputName","e","target","value","test","length","Dialog","DialogTitle","fontSize","textAlign","sx","pt","pb","width","Grid","container","direction","alignItems","justifyContent","Button","variant","onClick","event","currentTarget","disabled","user","user_NFT","marginTop","Popover","anchorOrigin","vertical","horizontal","Box","component","display","TextField","mt","mb","ml","error","label","onChange","helperText","console","log","setNickName","m","List","ListItem","ListItemText","primary","primaryTypographyProps","fontWeight","secondary","user_NFTName","secondaryTypographyProps","title","tokenId","tokenType","user_Active","user_Account","substr","Privacy","setOpen","setSelectedValue","IconButton","edge","color","Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","text","MainPresenter","loading","setLoading","loading_Test","setLoading_Test","AppBar","position","Toolbar","Typography","align","flexGrow","src","process","margin","item","marginBottom","boxShadow","ListItemAvatar","Avatar","bgcolor","deepOrange","height","marginLeft","active","disconnect","active_Test","connectWalletConnect","account","LoadingButton","walletSearch","disconnect_Test","connectWalletConnect_Test","account_Test","walletSearch_Test","api","findStr","arr","walletconnect","WalletConnectConnector","rpc","network","qrcode","pollingInterval","MainContainer","nft","setUser","useWeb3React","activate","deactivate","navigate","useNavigate","setActive_Test","setAccount_Test","onChangeName","setName","alert","config","apiKey","Network","ETH_MAINNET","alchemy","Alchemy","getMyNFTs","result","pageKey","getNftsForOwner","withMetadata","data","concat","ownedNfts","nftList","indexOf","push","user_NFTArray","setActive","setAccount","prevState","MypagePresenter","setMouseX","setMouseY","handleClick","clientX","clientY","handleClose","i","size","_nft","createTitleButton","transformOrigin","createSeed","MypageContainer","coming","currerent","ended","onClickTitleButton","curZoom","ShowRoomEndedArr","none","showRoom","NONE_Position","lat","lng","firstShowRoom","names","containerStyle","pick","_name","_position","_dateStart","_dateEnd","room","dateStart","dateEnd","new_ShowRoom","GoogleMapPresenter","isLoaded","useJsApiLoader","googleMapsApiKey","user_NFTComing","user_NFTNow","user_NFTEnded","user_ShowRoomEndedArr","a","unshift","map","setMap","onLoad","useCallback","loadMap","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","onLoad2","marker","bhandleToggle","setTimeout","bhandleClose","zoom","setZoom","useEffect","MarkerClick","p","setCenter","bopen","setbOpen","Backdrop","zIndex","drawer","CircularProgress","onZoomChanged","this","getZoom","mapContainerStyle","options","panControl","zoomControl","scaleControl","streetViewControl","mapTypeControl","overviewMapControl","rotateControl","disableDefaultUI","clickableIcons","center","optimized","MarkerImg","icon","url","anchor","Point","scaledSize","Size","style","borderRadius","mr","ClickAwayListener","onClickAway","prev","maxHeight","overflow","subheader","sectionId","memo","GoogleMapContainer","opa","Menu","anchorEl2","setAnchorEl2","ppanchorEl","ppsetAnchorEl","ppopen","ppid","Popper","placement","PaperProps","opacity","background","GoogleMap","DeleteScene","location","replace","SimpleDialogDemo","propTypes","PropTypes","func","isRequired","bool","camera","scene","renderer","geometry","material","mesh","firstInit","params","innerWidth","innerHeight","RendererContainer","AddShowRoom","THREE","z","add","antialias","setSize","setAnimationLoop","animation","document","body","appendChild","domElement","link","manager","onStart","itemsLoaded","itemsTotal","onProgress","onError","GLTFLoader","load","glb","init","time","rotation","x","y","render","addEventListener","aspect","updateProjectionMatrix","createTheme","JE_Position","YO_Position","GA_Position","App","addEndedArr","ThemeProvider","basename","path","element","Main","to","Mypage","Renderer","addComingArr","addNowArr","ReactDOM","getLibrary","provider","library","Web3Provider","getElementById"],"mappings":"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","file":"static/js/main.d10be8d4.chunk.js","sourcesContent":["\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Button } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Popover from '@mui/material/Popover';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nlet name ;\r\n\r\nconst regex = /^[a-z|A-Z]+$/;\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\n//let createName = true;\r\nfunction SimpleDialog(props) {\r\n    const { onClose, selectedValue, open } = props;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [createName, setCreateName] = React.useState(true);\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n    \r\n    //\r\n    const phandleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const phandleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const popen = Boolean(anchorEl);\r\n    const id = popen ? 'simple-popover' : undefined;\r\n\r\n\r\n    \r\n    function inputName(e) {\r\n\r\n\r\n            name = e.target.value;\r\n\r\n            setCreateName(!regex.test(name))\r\n\r\n            if(name.length > 12)\r\n            {\r\n                setCreateName(true)\r\n            }\r\n    }\r\n    function setName() {\r\n        console.log(name)\r\n        console.log(props)\r\n\r\n\r\n        props.setNickName(name)\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <Dialog onClose={handleClose} open={open} >\r\n            <DialogTitle fontSize={26}  textAlign='center' \r\n                sx={{ pt: '16px', pb: '40px' , width:'180px'}}>PRIVACY</DialogTitle>\r\n            <Grid container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <div>\r\n                    <Button variant=\"outlined\" \r\n                    aria-describedby={id} onClick={phandleClick}\r\n                    disabled = {!props.user.user_NFT}\r\n                        sx={{ pt: '6px', pb: '6px', marginTop:'-30px' }}>\r\n\r\n                        EDIT NAME\r\n                    </Button>\r\n                    <Popover\r\n                        id={id}\r\n                        open={popen}\r\n                        anchorEl={anchorEl}\r\n                        onClose={phandleClose}\r\n                        anchorOrigin={{\r\n                            vertical: 'center',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            component=\"form\"\r\n                           display=\"flex\"\r\n                        >\r\n                                {\r\n                                    createName ?\r\n                                    <TextField sx={{ \r\n                                        mt:'1rem' ,mb:'1rem', ml:'1rem'}}\r\n                                    error\r\n                                    id=\"outlined-error-helper-text\" label=\"Change NFT Name\" \r\n                                    variant=\"outlined\" onChange={inputName}        \r\n                                    helperText=\"\r\n                                    12 chars or less in English only\"\r\n                                  /> : \r\n                                  <TextField sx={{ \r\n                                    mt:'1rem' ,mb:'1rem', ml:'1rem'}}\r\n                                  id=\"outlined-basic\" label=\"Change NFT Name\" \r\n                                  variant=\"outlined\" onChange={inputName}        \r\n                                  helperText=\"\r\n                                    12 chars or less in English only\"\r\n                                /> \r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n                            <Button variant=\"contained\" \r\n                            disabled = {createName}\r\n                            onClick={() => \r\n                                { setName(); phandleClose(); }} sx={{ m: 1 }}>\r\n\r\n                                SET\r\n                            </Button>\r\n                        </Box>\r\n                    </Popover>\r\n\r\n                </div>\r\n            </Grid>\r\n\r\n            <List >\r\n\r\n\r\n\r\n                <ListItem >\r\n\r\n\r\n\r\n                </ListItem>\r\n\r\n                <ListItem sx={{ pt: '0px', pb: '0px' }}>\r\n\r\n                    <ListItemText primary=\"NFT-NAME\"\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFTName ? props.user.user_NFTName : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n\r\n                </ListItem>\r\n\r\n\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TITLE\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.title : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TOKEN-ID\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.tokenId : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n                <ListItem >\r\n                    <ListItemText primary={\"NFT-TOKEN-TYPE\"}\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_NFT ? props.user.user_NFT.tokenType : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n                </ListItem>\r\n\r\n\r\n                <ListItem>\r\n\r\n                    <ListItemText primary=\"ACCOUNT\"\r\n                        primaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '600',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                        secondary={props.user.user_Active ? props.user.user_Account.substr(0, 6) + \"...\" : \"Not Connect\"}\r\n                        secondaryTypographyProps={{\r\n                            fontSize: 14,\r\n                            fontWeight: '100',\r\n                            mb: '2px',\r\n                            textAlign: 'center',\r\n                            pt: '0px', pb: '0px'\r\n                        }}\r\n                    />\r\n\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n        </Dialog>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nfunction Privacy(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n\r\n    function showPrivacy() {\r\n        console.log(props.account_Test);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                edge=\"end\"\r\n                color=\"inherit\" onClick={handleClickOpen}\r\n>\r\n                <AccountCircleIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <SimpleDialog {...props}\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Privacy;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { deepOrange } from '@mui/material/colors';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\nimport IconButton from '@mui/material/IconButton';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\nimport Privacy from '../Renderer/Privacy';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nfunction MainPresenter(props) {\n    const [loading, setLoading] = React.useState();\n    const [loading_Test, setLoading_Test] = React.useState();\n\n    function Loading() {\n        setLoading(true);\n    }\n\n    function Loading_Test() {\n        setLoading_Test(true);\n    }\n\n    return (\n        <Box\n            sx={{\n                width: '100%',\n            }}>\n            <Grid container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <AppBar position=\"static\"  >\n                    <Toolbar variant=\"dense\">\n                        <YardOutlinedIcon fontSize=\"large\" />\n                        <Typography variant=\"h6\" align='center' sx={{ flexGrow: 1 }} >\n                            WALLET CONNECT\n                        </Typography>\n                        <Privacy {...props} />\n                    </Toolbar>\n                </AppBar>\n                <Grid marginTop={'1rem'}>\n                    <img src={process.env.PUBLIC_URL + \"/img/wallet.png\"} width=\"300\" margin=\"30\" ></img>\n                </Grid>\n                <Grid item width='18rem' marginTop={'1rem'} marginBottom={'3rem'} boxShadow={12}>\n                    <Item >\n                        <List>\n                            <ListItem >\n                                <ListItemAvatar  >\n                                    <Avatar sx={{\n                                        bgcolor: deepOrange[100], width: 48, height: 48\n                                        , marginLeft: '-12%'\n                                    }}>\n                                        {props.active ?\n                                            <IconButton onClick={props.disconnect}>\n                                                <ToggleOnTwoToneIcon color=\"primary\" fontSize='large' />\n                                            </IconButton> : <IconButton disabled={(props.active_Test)}\n                                                onClick={props.connectWalletConnect}>\n                                                <ToggleOffTwoToneIcon color=\"error\"\n                                                    fontSize='large' /></IconButton>}\n                                    </Avatar>\n                                </ListItemAvatar >\n                                <ListItemText primary=\"ACTIVE / ACCOUNT\" secondary=\n                                    {props.active ? \"Connect / \" + props.account.substr(0, 6) + \"...\" : \"Not Connect\"}\n                                />\n                            </ListItem>\n                            <Box\n                                display=\"grid\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                margin=\"4%\"\n                            >\n                                <LoadingButton variant=\"contained\" sx={{ width: '14rem', height: '100%', fontSize: '18px' }}\n                                    disabled={!props.active}\n                                    onClick={() => { props.walletSearch(); Loading(); }} loading={loading}\n                                >WALLET SEARCH</LoadingButton>\n                            </Box>\n                        </List>\n                    </Item>\n                </Grid>\n                <Grid item width='18rem' boxShadow={12}>\n                    <Item >\n                        <List>\n                            <ListItem >\n                                <ListItemAvatar >\n                                    <Avatar sx={{\n                                        bgcolor: deepOrange[100], width: 48, height: 48\n                                        , marginLeft: '-12%'\n                                    }}>\n                                        {props.active_Test ? <IconButton onClick={props.disconnect_Test}><ToggleOnTwoToneIcon color=\"primary\" fontSize='large' /></IconButton> : <IconButton disabled={(props.active)} onClick={props.connectWalletConnect_Test}><ToggleOffTwoToneIcon color=\"error\" fontSize='large' /></IconButton>}\n                                    </Avatar>\n                                </ListItemAvatar >\n                                <ListItemText \n                                 primary=\"TEST CONNECT\" secondary=\n                                    {props.active_Test ? \"Connect / \" + props.account_Test.substr(0, 6) + \"...\" : \"Not Connect\"}\n                                />\n                            </ListItem>\n                            <Box\n                                display=\"grid\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                margin=\"4%\"\n                            >\n                                <LoadingButton variant=\"contained\" sx={{ width: '14rem', height: '100%', fontSize: '18px' }}\n                                    disabled={!props.active_Test}\n                                    onClick={() => { props.walletSearch_Test(); Loading_Test(); }} loading={loading_Test}\n                                >WALLET SEARCH</LoadingButton>\n\n                            </Box>\n                        </List>\n                    </Item>\n                </Grid>\n            </Grid>\n        </Box >\n    );\n}\n\nexport default MainPresenter;\n","import React, { useState } from 'react';\nimport MainPresenter from './MainPresenter';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { Alchemy, Network } from \"alchemy-sdk\";\nimport { useNavigate } from 'react-router-dom';\n\nconst api = \"0caFBF128JudQbQ1Km-zn82t_L7C1Qvw\"\nconst findStr = \"monday ape\"\n\nlet arr = []\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: {\n        1: \"https://mainnet.infura.io/v3/00ca1859789d4b40bce01f4104844224\",\n        56: \"https://bsc-dataseed.binance.org/\"\n    },\n    network: \"binance\",\n    qrcode: true,\n    pollingInterval: 12000\n});\n\nfunction MainContainer({ user, setUser }) {\n    const {\n        active,\n        account,\n        activate,\n        deactivate\n    } = useWeb3React();\n\n    const navigate = useNavigate();\n\n    const [active_Test, setActive_Test] = useState();\n    const [account_Test, setAccount_Test] = useState();\n\n    const props = {\n        active,\n        account,\n        active_Test,\n        account_Test,\n        user,\n\n        onChangeName: (e) => {\n            console.log(e.target.value)\n            setName(e.target.value);\n        },\n        connectWalletConnect: async () => {\n            try {\n                await activate(walletconnect);\n            } catch (ex) {\n                console.log(ex)\n            }\n        },\n\n        walletSearch: async () => {\n            if (!active) {\n                alert(\"Not Connect\")\n                return\n            }\n\n            const config = {\n                apiKey: api,\n                network: Network.ETH_MAINNET,\n            }\n\n            const alchemy = new Alchemy(config);\n\n            const getMyNFTs = async (result, pageKey) => {\n                result = result ?? []\n\n                const data = await alchemy.nft.getNftsForOwner(account, {\n                    pageKey,\n                    withMetadata: false\n                })\n\n                result = result.concat(data.ownedNfts)\n\n                let nftList = data[\"ownedNfts\"]\n\n                let i = 1\n\n                for (let nft of nftList) {\n                    i++\n                    if (`${nft.title}`.indexOf(findStr) != -1) {\n                        arr.push(nft)\n                    }\n                }\n\n                if (data.pageKey) {\n                    result = await getMyNFTs(result, data.pageKey)\n                }\n\n                return result\n            }\n\n            arr = [];\n            await getMyNFTs()\n            props.user.user_Active = active\n            props.user.user_Account = account\n            props.user.user_NFTArray = arr\n            navigate(`/mypage`);\n        },\n\n        disconnect: async () => {\n                deactivate();\n                setActive(false)\n                setAccount(null)\n                props.user.user_Active = null\n                props.user.user_Account = null\n                props.user.user_NFTArray = null\n        },\n\n        connectWalletConnect_Test: async () => {\n            setActive_Test(true)\n            setAccount_Test(\"0xdE9B4206B1499e56E4417f8EdB7bE4586FeD30Ba\")\n            setUser((prevState) => {\n                return {\n                    ...prevState,\n                    user_Active: true,\n                    user_Account: \"0xdE9B4206B1499e56E4417f8EdB7bE4586FeD30Ba\",\n                }\n            });\n        },\n\n        walletSearch_Test: async () => {\n            if (!active_Test) {\n                alert(\"Not Connect\")\n                return\n            }\n\n            const config = {\n                apiKey: api,\n                network: Network.ETH_MAINNET,\n            }\n\n            const alchemy = new Alchemy(config);\n\n            const getMyNFTs = async (result, pageKey) => {\n                result = result ?? []\n\n                const data = await alchemy.nft.getNftsForOwner(account_Test, {\n                    pageKey,\n                    withMetadata: false\n                })\n\n                result = result.concat(data.ownedNfts)\n\n                let nftList = data[\"ownedNfts\"]\n\n                let i = 1\n\n                for (let nft of nftList) {\n                    i++\n                    if (`${nft.title}`.indexOf(findStr) != -1) {\n                        arr.push(nft)\n                    }\n                }\n\n                if (data.pageKey) {\n                    result = await getMyNFTs(result, data.pageKey)\n                }\n\n                return result\n            }\n\n            arr = [];\n            await getMyNFTs()\n            props.user.user_Active = active_Test\n            props.user.user_Account = account_Test\n            props.user.user_NFTArray = arr\n            navigate(`/mypage`)\n        },\n\n        disconnect_Test: async () => {\n            setActive_Test(false)\n            setAccount_Test(null)\n            props.user.user_Active = null\n            props.user.user_Account = null\n            props.user.user_NFTArray = null\n        }\n    }\n\n    return (\n        <MainPresenter {...props} />\n    );\n}\n\nexport default MainContainer","import React, { useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\nimport Privacy from '../Renderer/Privacy';\nimport Popover from '@mui/material/Popover';\nimport TextField from '@mui/material/TextField';\n\nlet name;\nlet nft;\n\n\n\nconst regex = /^[a-z|A-Z]+$/;\n\nfunction MypagePresenter(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mouseX, setMouseX] = useState(0);\n    const [mouseY, setMouseY] = useState(0);\n    const [createName, setCreateName] = React.useState(true);\n\n    const handleClick = (event) => {\n        setMouseX(event.clientX);\n        setMouseY(event.clientY);\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    function inputName(e) {\n\n        name = e.target.value;\n\n            setCreateName(!regex.test(name))\n\n            if(name.length > 12)\n            {\n                setCreateName(true)\n            }\n    }\n\n    function setName() {\n\n        props.user.user_NFT = nft\n        props.createSeed(name)\n    }\n\n    function nftSave(_nft) {\n        nft = _nft\n    }\n\n    const createTitleButton = () => {\n        const result = [];\n\n        for (let i = 0; i < props.user.user_NFTArray.length; i++) {\n\n            result.push(\n\n                <Button\n                    sx={{ width: '18rem', margin: '0.8rem' }}\n                    variant=\"contained\" size='large'\n                    onClick={() => { handleClick(event), nftSave(props.user.user_NFTArray[i]) }}\n                    key={i}>{props.user.user_NFTArray[i].title}\n                </Button>\n            );\n        }\n\n        return result;\n    }\n\n    return (\n\n\n        <Box\n            sx={{\n                width: '100vw',\n                height: '100vh'\n            }}>\n            <Grid >\n                <AppBar position=\"static\"  >\n                    <Toolbar variant=\"dense\">\n                        <YardOutlinedIcon fontSize=\"large\" />\n                        <Typography variant=\"h6\" align='center' sx={{ flexGrow: 1 }} >\n                           SEED NFT LIST\n                        </Typography>\n                        <Privacy {...props} />\n                    </Toolbar>\n                </AppBar>\n                <Grid container\n                    direction=\"column\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                    marginTop=\"1rem\"\n                >\n                    {createTitleButton()}\n                    <div>\n                        <Button variant=\"outlined\" aria-describedby={id} onClick={handleClick}\n                            disabled={!props.user.user_NFT}\n                            sx={{ pt: '6px', pb: '6px', marginTop: '-30px' }}>\n                            EDIT NAME\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                        //     anchorReference=\"anchorPosition\"\n                        //    anchorPosition={{  left: mouseY, top: mouseY }}\n                            anchorOrigin={{ vertical: 'center', horizontal: 'center', }}\n                            transformOrigin={{ vertical: 'center', horizontal: 'center', }}\n                        >\n                            <Box\n                              //  component=\"form\"\n                                display=\"flex\"\n                            >\n\n\n{\n                                    createName ?\n                                    <TextField sx={{ \n                                        mt:'1rem' ,mb:'1rem', ml:'1rem'}}\n                                    error\n                                    id=\"outlined-error-helper-text\" label=\"Create NFT Name\" \n                                    variant=\"outlined\" onChange={inputName}        \n                                    helperText=\"\n                                    12 chars or less in English only\"\n                                  /> : \n                                    <TextField sx={{ \n                                        mt:'1rem' ,mb:'1rem', ml:'1rem'}}\n                                    id=\"outlined-basic\" label=\"Create NFT Name\" \n                                    variant=\"outlined\" onChange={inputName}             \n                                    helperText=\"\n                                    12 chars or less in English only\"\n                                  /> \n}\n\n\n                                <Button variant=\"contained\" \n                                                    disabled = {createName}\n                                onClick={() => { setName(); handleClose(); }} \n                                sx={{ margin:'1rem' }}>\n                                    SET\n                                </Button>\n                            </Box>\n                        </Popover>\n                    </div>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default MypagePresenter;\n","import MainContainer from \"./MainContainer\";\n\nexport default MainContainer;","import MypagePresenter from './MypagePresenter';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction MypageContainer({ user, setUser }) {\n    const navigate = useNavigate();\n\n    const props = {\n        user,\n        setUser,\n        onClickTitleButton: (nft) => {\n            setUser((prevState) => {\n                return { ...prevState, user_NFT: nft }\n            });\n        },\n        createSeed: (name) => {\n            setUser((prevState) => {\n                return { ...prevState, user_NFTName: name }\n            });\n            navigate(`/renderer`);\n        },\n    }\n\n    return (\n        <MypagePresenter {...props} />\n    );\n}\n\nexport default MypageContainer;\n","import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport { Button } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport MarkerImg from './pin.png';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport RemoveCircleTwoToneIcon from '@mui/icons-material/RemoveCircleTwoTone';\r\nimport AddCircleTwoToneIcon from '@mui/icons-material/AddCircleTwoTone';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nlet curZoom = 3;\r\nlet ShowRoomEndedArr = [];\r\n\r\nlet coming, currerent, ended\r\nlet none = null\r\n\r\nfunction showRoom() {\r\n  let name, position, dateStart, dateEnd;\r\n}\r\n\r\nfunction new_ShowRoom(_name, _position, _dateStart, _dateEnd) {\r\n  let room = new showRoom();\r\n  room.name = _name;\r\n  room.position = _position;\r\n  room.dateStart = _dateStart;\r\n  room.dateEnd = _dateEnd;\r\n  return room;\r\n}\r\n\r\nconst NONE_Position = {\r\n  lat: 36.594678, lng: 127.985756\r\n}\r\n\r\nlet firstShowRoom = false;\r\nlet names = []\r\nconst containerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n};\r\n\r\n\r\n\r\nfunction pick() {\r\n  if (currerent) {\r\n    return currerent;\r\n  }\r\n  else if (ended) {\r\n    return ended;\r\n  }\r\n  else if (coming) {\r\n    return coming;\r\n  }\r\n  else\r\n    return none = new_ShowRoom(\"NONE\", NONE_Position, \"0\", \"0\");\r\n}\r\n\r\nfunction GoogleMapPresenter(props) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyDAR5IsWK28BMFmf7TBPcToCG7sQoO81aA\"\r\n  })\r\n\r\n  coming = props.user.user_NFTComing\r\n  currerent = props.user.user_NFTNow\r\n  ended = props.user.user_NFTEnded\r\n\r\n\r\n  names = []\r\n  ShowRoomEndedArr = []\r\n  ShowRoomEndedArr = props.user.user_ShowRoomEndedArr\r\n\r\n  for (let i = 0; i < ShowRoomEndedArr.length; ++i) {\r\n    let a = ShowRoomEndedArr[i].dateStart + \" ~ \" + ShowRoomEndedArr[i].dateEnd + \" - \" + ShowRoomEndedArr[i].name\r\n    names.unshift(a)\r\n  }\r\n\r\n  if (!coming && !currerent && !ended) {\r\n    firstShowRoom = false;\r\n  }\r\n  else {\r\n    firstShowRoom = true;\r\n  }\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    loadMap();\r\n    const bounds = new window.google.maps.LatLngBounds(pick() ? pick().position : null);\r\n    map.fitBounds(bounds);\r\n\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onLoad2 = marker => {\r\n    console.log('marker: ', marker)\r\n  }\r\n\r\n  async function loadMap() {\r\n    bhandleToggle()\r\n\r\n    setTimeout(() => {\r\n      bhandleClose()\r\n    }, 600);\r\n  }\r\n\r\n  const [zoom, setZoom] = useState()\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setZoom(3)\r\n    }, 800);\r\n  }, [])\r\n\r\n  const MarkerClick = (p) => {\r\n    loadMap()\r\n    map.setCenter(p);\r\n    setZoom(curZoom)\r\n    setTimeout(() => {\r\n      setZoom(15)\r\n    }, 400);\r\n\r\n  }\r\n\r\n  var myOptions = {\r\n    panControl: false,\r\n    zoomControl: false,\r\n    scaleControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    overviewMapControl: false,\r\n    rotateControl: false,\r\n    disableDefaultUI: true,\r\n    clickableIcons: false,\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [personName, setPersonName] = React.useState([]);\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n\r\n  const [bopen, setbOpen] = React.useState(false);\r\n  const bhandleClose = () => {\r\n    setbOpen(false);\r\n  };\r\n  const bhandleToggle = () => {\r\n    setbOpen(!open);\r\n  };\r\n\r\n  function PlusZoom() {\r\n\r\n    let a = curZoom + 1;\r\n    setZoom(a)\r\n  }\r\n  function SuntractZoom() {\r\n    let a = curZoom - 1;\r\n    setZoom(a)\r\n  }\r\n\r\n  function handleZoomChanged() {\r\n    console.log(this.getZoom())\r\n    curZoom = this.getZoom()\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <>\r\n      <div>\r\n        <Backdrop\r\n          sx={{ color: '#fff', height: '100vh', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={bopen}\r\n        // onClick={bhandleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" >\r\n\r\n          </CircularProgress>\r\n        </Backdrop>\r\n      </div>\r\n\r\n\r\n      <Box\r\n      >\r\n        <Grid\r\n          sx={{ height: '6vh ' }}\r\n        >\r\n          <GoogleMap\r\n            onZoomChanged={handleZoomChanged}\r\n            mapContainerStyle={containerStyle}\r\n\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            zoom={zoom}\r\n            options={myOptions}\r\n            center={pick().position}\r\n\r\n          >\r\n            {\r\n              !firstShowRoom ?\r\n\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{ src: { MarkerImg }, text: \"Have no plans\", color: '#000', fontSize: \"20px\", fontWeight: \"500\" }}\r\n                  onLoad={onLoad2}\r\n\r\n                  position={currerent ? currerent.position : NONE_Position}\r\n\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(90, 60),\r\n                    scaledSize: new google.maps.Size(180, 180)\r\n                  }}\r\n                />\r\n\r\n\r\n                : null\r\n            }\r\n            {\r\n              currerent ?\r\n                <Marker\r\n\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{\r\n                    src: { MarkerImg }, text: currerent ? \"NOW\" : \"cNONE\",\r\n                    color: '#000', fontSize: \"12px\", fontWeight: \"600\"\r\n                  }}\r\n                  onLoad={onLoad2}\r\n\r\n                  position={currerent ? currerent.position : NONE_Position}\r\n                  onClick={() => MarkerClick(currerent.position)}\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(30, 40),\r\n                    scaledSize: new google.maps.Size(60, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n\r\n            {\r\n              coming ?\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={4}\r\n                  label={{\r\n                    src: { MarkerImg }, text: coming ? \"COMING\" : \"cNONE\", color: '#000',\r\n                    fontSize: \"12px\", fontWeight: \"600\"\r\n                  }}\r\n                  onLoad={onLoad2}\r\n                  position={coming ? coming.position : NONE_Position}\r\n\r\n                  onClick={() => MarkerClick(coming.position)}\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n                    anchor: new google.maps.Point(40, 40),\r\n                    scaledSize: new google.maps.Size(80, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n\r\n            {\r\n              ended ?\r\n                <Marker\r\n                  optimized={false}\r\n                  zIndex={5}\r\n                  label={{ src: { MarkerImg }, text: ended ? \"ENDED\" : \"eNONE\", color: '#000', fontSize: \"12px\", fontWeight: \"600\" }}\r\n                  onLoad={onLoad2}\r\n                  position={ended ? ended.position : NONE_Position}\r\n                  onClick={() => MarkerClick(ended.position)}\r\n\r\n                  icon={{\r\n                    url: MarkerImg,\r\n\r\n\r\n                    anchor: new google.maps.Point(30, 38),\r\n                    scaledSize: new google.maps.Size(60, 120)\r\n                  }}\r\n                /> : null\r\n            }\r\n\r\n          </GoogleMap>\r\n\r\n        </Grid>\r\n        <>\r\n          <Grid container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n\r\n\r\n            <Grid >\r\n              <Button variant=\"contained\"\r\n                sx={{ padding: '4%' }}\r\n                style={{\r\n                  marginTop: \"40%\", width: \"90px\",\r\n                  display: \"grid\", borderRadius: 8,\r\n                }}\r\n                onClick={() => coming ? MarkerClick(coming.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  COMING\r\n                </Typography>\r\n                <Typography\r\n                  sx={{ marginTop: '-10%' }}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {coming ? coming.name : \"NONE\"}\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item mr={'2vw'} ml={'2vw'} >\r\n\r\n            </Grid>\r\n\r\n            <Grid item >\r\n              <Button variant=\"contained\"\r\n                sx={{ padding: '4%' }}\r\n                style={{\r\n                  marginTop: \"40%\", width: \"90px\",\r\n                  display: \"grid\", borderRadius: 8,\r\n                }}\r\n                onClick={() => currerent ? MarkerClick(currerent.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  NOW\r\n                </Typography>\r\n                <Typography\r\n                  sx={{ marginTop: '-10%' }}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {currerent ? currerent.name : \"NONE\"}\r\n                </Typography>\r\n              </Button>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid item mr={'2vw'} ml={'2vw'} >\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid item >\r\n              <Button variant=\"contained\" color=\"primary\"\r\n                sx={{ padding: '4%' }}\r\n                style={{\r\n                  marginTop: \"40%\", width: \"90px\",\r\n                  display: \"grid\", borderRadius: 8,\r\n                }}\r\n                onClick={() => ended ? MarkerClick(ended.position) : null} >\r\n                <Typography\r\n                  fontSize=\"10px\">\r\n                  ENDED\r\n                </Typography>\r\n                <Typography\r\n                  sx={{ marginTop: '-10%' }}\r\n                  fontSize=\"10px\" fontWeight={\"100\"}>\r\n                  {ended ? ended.name : \"NONE\"}\r\n                </Typography>\r\n\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n\r\n          >\r\n\r\n            <ClickAwayListener onClickAway={handleClickAway} >\r\n              <Box marginTop='0.6rem'>\r\n                <Button onClick={handleClick} variant=\"contained\" color=\"primary\"\r\n                  style={{\r\n                    width: \"10rem\",\r\n\r\n\r\n\r\n                    borderRadius: 10,\r\n\r\n                    fontSize: \"10px\",\r\n\r\n                  }}\r\n\r\n                >\r\n                  <Typography\r\n                    fontSize=\"12px\">\r\n                    PAST SHOW LIST\r\n                  </Typography>\r\n\r\n                </Button>\r\n\r\n\r\n                <IconButton\r\n                  color=\"primary\" onClick={PlusZoom}\r\n                  sx={{}}>\r\n                  <AddCircleTwoToneIcon fontSize=\"large\" />\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                  color=\"primary\" onClick={SuntractZoom}\r\n                  sx={{}}>\r\n                  <RemoveCircleTwoToneIcon fontSize=\"large\" />\r\n                </IconButton>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                ({none ?\r\n                  <div>\r\n                    {open ? (\r\n\r\n\r\n                      <Grid item\r\n\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n\r\n                      >\r\n                        <List\r\n                          sx={{\r\n                            width: 'center',\r\n                            height: 'center',\r\n                            position: 'fixed',\r\n                            maxHeight: '10%',\r\n                            bgcolor: 'background.paper',\r\n\r\n                            overflow: 'auto',\r\n                            marginTop: '4%',\r\n                            borderRadius: 2,\r\n                            '& ul': { padding: 0 },\r\n                          }}\r\n                        >\r\n\r\n                          <ListItem\r\n                          >\r\n                            <Typography\r\n                              fontSize=\"16px\">\r\n                              EMPTY\r\n                            </Typography>\r\n                          </ListItem>\r\n\r\n\r\n                        </List>\r\n                      </Grid>\r\n                    ) : null}\r\n\r\n                  </div>\r\n                  :\r\n\r\n                  <div>\r\n\r\n                    {open ? (\r\n\r\n\r\n\r\n                      <Grid item\r\n\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n\r\n                      >\r\n                        <List\r\n                          sx={{\r\n                            width: 'center',\r\n                            height: 'center',\r\n                            position: 'fixed',\r\n                            maxHeight: '30%',\r\n                            bgcolor: 'background.paper',\r\n\r\n                            overflow: 'auto',\r\n                            marginTop: '4%',\r\n                            borderRadius: 2,\r\n                            '& ul': { padding: 0 },\r\n                          }}\r\n                          subheader={<li />}\r\n                        >\r\n                          {[0].map((sectionId) => (\r\n                            <li key={`section-${sectionId}`}>\r\n                              <ul>\r\n                                {names.map((item) => (\r\n                                  <ListItem key={`${sectionId}-${item}`}\r\n                                  >\r\n                                    <ListItemText primary={` ${item}`}\r\n                                      primaryTypographyProps={{\r\n                                        fontSize: 11,\r\n                                        fontWeight: '400',\r\n                                        textAlign: 'center',\r\n                                        marginBottom: '-7px'\r\n                                      }}\r\n\r\n                                    />\r\n                                  </ListItem>\r\n                                ))}\r\n                              </ul>\r\n                            </li>\r\n                          ))}\r\n                        </List>\r\n                      </Grid>\r\n                    ) : null}\r\n                  </div>\r\n                  })\r\n\r\n\r\n              </Box>\r\n\r\n            </ClickAwayListener>\r\n\r\n          </Grid>\r\n        </>\r\n      </Box>\r\n    </>\r\n\r\n  ) : <></>\r\n}\r\n\r\nexport default React.memo(GoogleMapPresenter)\r\n\r\n\r\n","import MypageContainer from \"./MypageContainer\";\n\nexport default MypageContainer;","export default __webpack_public_path__ + \"static/media/pencil.7ada824a.svg\";","export default __webpack_public_path__ + \"static/media/pin.09d8abec.png\";","import React from 'react'\r\nimport GoogleMapPresenter from './GoogleMapPresenter'\r\n\r\nfunction GoogleMapContainer (props) {\r\n\r\n  return (\r\n    <>\r\n                <GoogleMapPresenter {...props} />\r\n    </>\r\n  )\r\n}\r\nexport default GoogleMapContainer;\r\n","import GoogleMapContainer from \"./GoogleMapContainer\";\r\n\r\nexport default GoogleMapContainer;","\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { IconTextInput } from '../../components/TextInput';\r\nimport PencilIconSvg from '../../assets/icon/pencil.svg';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport ToggleOffTwoToneIcon from '@mui/icons-material/ToggleOffTwoTone';\r\nimport ToggleOnTwoToneIcon from '@mui/icons-material/ToggleOnTwoTone';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { green, pink, deepOrange } from '@mui/material/colors';\r\nimport { Button } from '@mui/material';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport YardOutlinedIcon from '@mui/icons-material/YardOutlined';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport GoogleMapScreen from \"../GoogleMap/\";\r\nimport { width } from '@mui/system';\r\nimport Popper from '@mui/material/Popper';\r\n\r\nlet opa = 0;\r\n\r\nfunction Menu(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n    const [ppanchorEl, ppsetAnchorEl] = React.useState(null);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        opa = 0;\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setAnchorEl2(null);\r\n        ppsetAnchorEl(null);\r\n        opa = 0;\r\n    };\r\n\r\n    const exit = () => {\r\n        setAnchorEl(null);\r\n\r\n        setTimeout(() => {\r\n            setAnchorEl2(null);\r\n            ppsetAnchorEl(null);\r\n            opa = 0;\r\n          }, 500);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n    //\r\n    const phandleClick = (event) => {\r\n        setAnchorEl2(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const phandleClose = () => {\r\n        setAnchorEl2(null);\r\n        setAnchorEl(null);\r\n        ppsetAnchorEl(null);\r\n    };\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    function returnNFTList() {\r\n        props.DeleteScene();\r\n        //localStorage.removeItem('item2')\r\n\r\n        window.location.replace(\"/mypage\")\r\n        // setTimeout(() => {\r\n        //     navigate(`/mypage`);\r\n        //   }, 1500);\r\n\r\n    }\r\n\r\n\r\n    const pphandleClick = (event) => {\r\n\r\n\r\n        setAnchorEl(null);\r\n        setAnchorEl2(null);\r\n        ppsetAnchorEl(null);\r\n\r\n        ppsetAnchorEl(event);\r\n\r\n\r\n        setTimeout(() => {\r\n            opa = 1;\r\n          }, 50);\r\n\r\n\r\n        setTimeout(() => {\r\n            setAnchorEl(event);\r\n          }, 100);\r\n\r\n\r\n\r\n    };3\r\n\r\n    const ppopen = Boolean(ppanchorEl);\r\n    const ppid = ppopen ? 'simple-popper' : undefined;\r\n\r\n\r\n    const popen = Boolean(anchorEl2);\r\n    const pid = popen ? 'simple-popover' : undefined;\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <div >\r\n            <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\" onClick={handleClick}\r\n\r\n\r\n                >\r\n\r\n\r\n                <MenuIcon fontSize=\"large\" />\r\n            </IconButton>\r\n\r\n            <Dialog onClose={handleClose} open={open} >\r\n                <DialogTitle fontSize={26} textAlign='center'\r\n\r\n                    sx={{ pt: '20px', marginBottom: '-50px' }}>MENU\r\n                            \r\n                    </DialogTitle>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n\r\n                    <Button variant=\"contained\" aria-describedby={id} onClick={pphandleClick}\r\n                        sx={{ \r\n                            pt: '10px', pb: '10px', width: '60%',\r\n                             marginTop: '50px', marginBottom: '30px' }}>\r\n\r\n                        OPEN EXHIBITION MAP\r\n                    </Button>\r\n\r\n\r\n                    <Popper\r\n                        id={ppid} open={ppopen} anchorEl={ppanchorEl}\r\n                        placement='bottom'\r\n\r\n                        PaperProps={{\r\n                            style: { width: '100%', height: '100%',    zIndex: 1000000 },\r\n                        }}\r\n\r\n                        style={{zIndex: 10000,\r\n                            opacity: opa\r\n                        }} \r\n                    >\r\n\r\n                      <AppBar position=\"fixed\"\r\n                                style={{ background: '\t#483D8B'}}\r\n\r\n                            >\r\n                                <Toolbar variant=\"dense\">\r\n                                    <YardOutlinedIcon\r\n                                     fontSize=\"large\" edge=\"start\" \r\n  \r\n                                     />\r\n                                    <Typography variant=\"h6\" align='center' \r\n                                    sx={{ flexGrow: 1 }} >\r\n                                        SEED EXHIBITION\r\n                                    </Typography>\r\n\r\n                                    <IconButton\r\n\r\n                                        edge=\"end\"\r\n                                        color=\"inherit\" onClick={exit}\r\n\r\n                                        >        \r\n                                        <CloseIcon fontSize=\"large\" \r\n                                        />\r\n                                    </IconButton>\r\n                                </Toolbar>\r\n                            </AppBar>      \r\n                        <GoogleMapScreen  {...props} />\r\n                    </Popper >\r\n                    <Button variant=\"contained\" onClick={returnNFTList}\r\n                        sx={{\r\n                            pt: '10px', pb: '10px', width: '60%', marginBottom: '50px'\r\n                            }}>\r\n\r\n                        RETURN NFT LIST\r\n                    </Button>\r\n                </Grid>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Privacy from './Privacy';\nimport Menu from './Menu';\n\n\n\n\nfunction SimpleDialog(props) {\n\n\n    return (\n<>\n</>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\n\n\n\nexport default function SimpleDialogDemo(props) {\n    const [open, setOpen] = React.useState(false);\n\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n    return (\n\n        \n        <Box >\n            <Grid   >\n                <AppBar position=\"fixed\"\n\n                sx={{\n\n            }}\n                >\n                    <Toolbar variant=\"dense\" >\n                        <>\n                            <Menu {...props} />\n                        </>\n                        <Typography variant=\"h6\" align='center' \n                        sx={{ flexGrow: 1 }} >\n\n                            {props.user.user_NFTName}\n                        </Typography >\n                        <Privacy {...props} />\n                    </Toolbar>\n                </AppBar>\n            </Grid>\n            <Grid position={'fixed'}>\n                <SimpleDialog {...props}\n                    open={open}\n                    onClose={handleClose} />\n            </Grid>\n        </Box>\n\n    );\n}\n","import React, { useState } from 'react';\nimport RendererPresenter from '../Renderer/RendererPresenter';\nimport * as THREE from 'three';\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nlet camera, scene, renderer;\nlet geometry, material, mesh;\n\nlet con = false;\nlet firstInit = false;\nlet NFTc;\nlet userc;\nconst params = {\n    color: '#FFA07A'\n};\n\nconst sceneX = window.innerWidth;\nconst sceneY = window.innerHeight\nlet bb = true;\n\n\nfunction RendererContainer({ user, setUser, AddShowRoom }) {\n\n\n    // if( !user.user_NFTName)\n    // {\n    //     user.user_NFTName =\"Default Name\"\n    // }\n\n\n\n\n    if (!firstInit) {\n        init();\n        firstInit = true;\n    }\n\n\n    // if (!user.user_NFT) {\n    //     let getitem = JSON.parse(localStorage.getItem('item2'))\n    //     user = getitem.value\n    // }\n\n    // const value = user;\n    // localStorage.setItem('item2', JSON.stringify({ value }))\n\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n      setOpen(false);\n    };\n    const handleToggle = () => {\n      setOpen(true);\n    };\n\n    function init() {\n\n        AddShowRoom();\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10);\n        camera.position.z = 10;\n\n        scene = new THREE.Scene();\n\n        scene.background = new THREE.Color(params.color);\n        geometry = new THREE.BoxGeometry(1, 1, 1);\n        material = new THREE.MeshNormalMaterial();\n\n        mesh = new THREE.Mesh(geometry, material);\n\n\n        scene.add(mesh);\n\n        renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        renderer.setAnimationLoop(animation);\n        document.body.appendChild(renderer.domElement);\n\n\n       // let link = \"https://vast-wildwood-40697.herokuapp.com/https://dstrict.s3.ap-northeast-2.amazonaws.com/seed/TREX.glb\"\n        let link = process.env.PUBLIC_URL + \"/model/T-Rex.glb\"\n        const manager = new THREE.LoadingManager();\n        manager.onStart = function (url, itemsLoaded, itemsTotal) {\n\n            console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n\n        };\n\n        manager.onLoad = function () {\n\n            console.log('Loading complete!');\n           // handleClose();\n        };\n\n\n        manager.onProgress = function (url, itemsLoaded, itemsTotal) {\n\n            console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n\n        };\n\n        manager.onError = function (url) {\n\n            console.log('There was an error loading ' + url);\n\n        };\n\n\n        //\n\n\n        const loader = new GLTFLoader(manager);\n\n\n\n        loader.load(link, function (glb) {\n\n            scene.add(glb.scene);\n\n        }, undefined, function (error) {\n\n            console.error(error);\n\n        });\n\n\n\n\n\n\n    }\n\n\n\n    //const sceneX = window.innerWidth;\n   // const sceneY = window.innerHeight\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n        setTimeout(() => {\n        camera.aspect = window.innerWidth /window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth , window.innerHeight);\n    }, 100);\n    //     if(!con)\n    //     {\n\n    //         if(bb)\n    //         {\n\n    //         //    camera.aspect = window.innerWidth /window.innerHeight;\n    //         //    camera.updateProjectionMatrix();\n    //          //   renderer.setSize(window.innerWidth , window.innerHeight);\n\n    //             setTimeout(() => {\n    //                 camera.aspect = window.innerWidth /window.innerHeight;\n    //                 camera.updateProjectionMatrix();\n    //                 renderer.setSize(window.innerWidth , window.innerHeight);\n    //                 con = true\n\n    //                 console.log(\"zzzzzzzzzzzzzzz\")\n    //                 console.log(\"zzzzzzzzzzzzzzz\")\n    //               }, 100);\n    //        }\n    //        bb = false\n\n\n    //    }\n    //     else if (con) {\n\n    //         if(!bb)\n    //         {\n\n    //       //      camera.aspect = window.innerWidth /window.innerHeight;\n    //        //     camera.updateProjectionMatrix();\n    //       //     renderer.setSize(window.innerWidth , window.innerHeight);\n\n    //         setTimeout(() => {\n    //             camera.aspect = window.innerWidth /window.innerHeight;\n    //             camera.updateProjectionMatrix();\n    //             renderer.setSize(window.innerWidth , window.innerHeight);\n    //             con = false\n\n    //             console.log(\"xxxxxxxxxxx\")\n    //             console.log(\"xxxxxxxxxxxx\")\n    //           }, 100);\n    //         }\n    //         bb = true\n    //     }\n\n\n        \n    }\n\n    function animation(time) {\n\n\n\n        mesh.rotation.x = time / 2000;\n        mesh.rotation.y = time / 1000;\n\n        renderer.render(scene, camera);\n\n\n    }\n\n    const props = {\n\n        user,\n        setUser,\n        setNickName: (name) => {\n            setUser((prevState) => {\n                return { ...prevState, user_NFTName: name }\n            });\n        },\n        DeleteScene: () => {\n\n\n\n            camera = null\n            scene.background = null\n            scene = null\n            geometry = null\n            material = null\n            mesh = null\n            renderer.setAnimationLoop(null);\n            renderer = null\n\n\n        },\n\n\n    }\n\n\n    return (\n        <>\n\n\n\n            <RendererPresenter {...props} />\n\n        </>\n    );\n}\n\nexport default RendererContainer;","import RendererContainer from \"./RendererContainer\";\n\nexport default RendererContainer;","import React, { useState } from \"react\";\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport MainScreen from './screens/Main';\nimport MypageScreen from './screens/Mypage';\nimport RendererScreen from './screens/Renderer'\nimport './App.css'\n\nconst theme = createTheme({\n  typography: {\n    \"fontFamily\": `\"Raleway\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  },\n});\n\nconst JE_Position = {\n  lat: 33.396514, lng: 126.344930\n};\n\nconst YO_Position = {\n  lat: 34.750594, lng: 127.745762\n};\n\nconst GA_Position = {\n  lat: 37.791855, lng: 128.90720,\n};\n\nfunction App() {\n  let [user, setUser] = useState({\n    user_Active: null,\n    user_Account: null,\n    user_NFT: null,\n    user_NFTArray: null,\n    user_NFTName: null,\n    user_NFTComing: null,\n    user_NFTNow: null,\n    user_NFTEnded: null,\n    user_ShowRoomEndedArr: [],\n  });\n\n  function showRoom() {\n    let name, position, dateStart, dateEnd;\n  }\n\n  function new_ShowRoom(_name, _position, _dateStart, _dateEnd) {\n    let room = new showRoom();\n    room.name = _name;\n    room.position = _position;\n    room.dateStart = _dateStart;\n    room.dateEnd = _dateEnd;\n    return room;\n  }\n\n  function addComingArr(_name, _position, _dateStart, _dateEnd) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd);\n    user.user_NFTComing = room;\n  }\n\n  function addNowArr(_name, _position, _dateStart, _dateEnd) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd);\n    user.user_NFTNow = room;\n  }\n\n  function addEndedArr(_name, _position, _dateStart, _dateEnd) {\n    let room = new_ShowRoom(_name, _position, _dateStart, _dateEnd);\n    user.user_NFTEnded = room;\n    user.user_ShowRoomEndedArr.push(room)\n  }\n\n  function removeComing() {\n    user.user_NFTComing = null;\n  }\n\n  function removeNow() {\n    user.user_NFTNow = null;\n  }\n\n  function removeEnded() {\n    user.user_NFTEnded = null;\n  }\n\n  function removeEndedArr() {\n    user.user_ShowRoomEndedArr = null;\n  }\n\n  function removeAll() {\n    user.user_NFTComing = null;\n    user.user_NFTNow = null;\n    user.user_NFTEnded = null;\n    user.user_ShowRoomEndedArr = null;\n  }\n\n  function AddShowRoom() {\n    addComingArr('제주', JE_Position, \"2022.11.20\", \"2030.05.20\");\n    addNowArr('여수', YO_Position, \"2023.11.21\", \"2031.11.20\");\n    addEndedArr('강릉1', GA_Position, \"2021.11.22\", \"2031.11.20\");\n    addEndedArr('강릉2', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉3', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉4', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉5', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉6', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉7', GA_Position, \"2022.11.22\", \"2032.11.20\");\n    addEndedArr('강릉8', GA_Position, \"2022.11.22\", \"2032.11.20\");\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Routes>\n          <Route path=\"/main\" element={<MainScreen user={user} setUser={setUser} />} />\n            <Route path=\"/\" element={<Navigate replace to=\"/main\" />} />\n            <Route path=\"/mypage\" element={<MypageScreen user={user} setUser={setUser} />} />\n            <Route path=\"/renderer\" element={<RendererScreen user={user} setUser={setUser} AddShowRoom={AddShowRoom} />} />\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}